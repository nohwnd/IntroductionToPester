{
  "total_count": 156,
  "incomplete_results": false,
  "items": [
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2123",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2123/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2123/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2123/events",
      "html_url": "https://github.com/pester/Pester/issues/2123",
      "id": 1094797852,
      "node_id": "I_kwDOABKEIs5BQUoc",
      "number": 2123,
      "title": "Debug.WriteDebugMessages Can Cause Dictionary Key Errors",
      "user": {
        "login": "LethiferousMoose",
        "id": 24547864,
        "node_id": "MDQ6VXNlcjI0NTQ3ODY0",
        "avatar_url": "https://avatars.githubusercontent.com/u/24547864?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/LethiferousMoose",
        "html_url": "https://github.com/LethiferousMoose",
        "followers_url": "https://api.github.com/users/LethiferousMoose/followers",
        "following_url": "https://api.github.com/users/LethiferousMoose/following{/other_user}",
        "gists_url": "https://api.github.com/users/LethiferousMoose/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/LethiferousMoose/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/LethiferousMoose/subscriptions",
        "organizations_url": "https://api.github.com/users/LethiferousMoose/orgs",
        "repos_url": "https://api.github.com/users/LethiferousMoose/repos",
        "events_url": "https://api.github.com/users/LethiferousMoose/events{/privacy}",
        "received_events_url": "https://api.github.com/users/LethiferousMoose/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 201990629,
          "node_id": "MDU6TGFiZWwyMDE5OTA2Mjk=",
          "url": "https://api.github.com/repos/pester/Pester/labels/Bug",
          "name": "Bug",
          "color": "e11d21",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "fflaten",
        "id": 3436158,
        "node_id": "MDQ6VXNlcjM0MzYxNTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3436158?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fflaten",
        "html_url": "https://github.com/fflaten",
        "followers_url": "https://api.github.com/users/fflaten/followers",
        "following_url": "https://api.github.com/users/fflaten/following{/other_user}",
        "gists_url": "https://api.github.com/users/fflaten/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fflaten/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fflaten/subscriptions",
        "organizations_url": "https://api.github.com/users/fflaten/orgs",
        "repos_url": "https://api.github.com/users/fflaten/repos",
        "events_url": "https://api.github.com/users/fflaten/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fflaten/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "fflaten",
          "id": 3436158,
          "node_id": "MDQ6VXNlcjM0MzYxNTg=",
          "avatar_url": "https://avatars.githubusercontent.com/u/3436158?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/fflaten",
          "html_url": "https://github.com/fflaten",
          "followers_url": "https://api.github.com/users/fflaten/followers",
          "following_url": "https://api.github.com/users/fflaten/following{/other_user}",
          "gists_url": "https://api.github.com/users/fflaten/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/fflaten/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/fflaten/subscriptions",
          "organizations_url": "https://api.github.com/users/fflaten/orgs",
          "repos_url": "https://api.github.com/users/fflaten/repos",
          "events_url": "https://api.github.com/users/fflaten/events{/privacy}",
          "received_events_url": "https://api.github.com/users/fflaten/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": null,
      "comments": 4,
      "created_at": "2022-01-05T22:32:40Z",
      "updated_at": "2022-01-07T06:32:06Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "<!-- Thank you for using Pester and taking the time to report this issue!\r\nOnly Pester 4.10.x and 5.x.x are supported, try updating to the latest version to see if that solves your problem. See [Installation and update guide](https://pester.dev/docs/introduction/installation).\r\n\r\n- Please update Pester and retest your code before submitting a bug report. See [Installation and update guide](https://pester.dev/docs/introduction/installation).\r\n- Search for existing issues.\r\n- Pester 5 introduced breaking changes and some features were removed or are not yet migrated. See [Breaking changes](https://github.com/pester/Pester#breaking-changes)\r\n-->\r\n\r\n## General summary of the issue\r\nUsing parameter filters when debug messages are turned on can lead to errors in Pester with duplicate keys for variables being added to the dictionary\r\n\r\n## Describe your environment\r\n<!-- Please provide the output of this script:\r\n(Invoke-WebRequest -Uri \"https://git.io/JTinj\" -UseBasicParsing).Content | Invoke-Expression\r\n\r\nThe script collects Operating System, Pester version and PowerShell version.\r\nYou can open the URL in a browser to view the code before running it. -->\r\n\r\n```\r\nPester version     : 5.3.1 C:\\Users\\biggi\\Documents\\PowerShell\\Modules\\Pester\\5.3.1\\Pester.psm1\r\nPowerShell version : 7.2.1\r\nOS version         : Microsoft Windows NT 10.0.19043.0\r\n```\r\n\r\n## Steps to reproduce\r\n<!-- Provide steps and/or sample code to reproduce the issue.\r\nTry to make it as concise as possible, removing irrelevant steps/code and providing sample data where possible. This will enable us to help you faster.\r\nTip: Placing Powershell code in a codeblock like below makes it more readable.\r\n\r\n```powershell\r\n    #My code\r\n```\r\n-->\r\nCreate a test module (TestModule.psm1) with the following and install it where PowerShell can find it:\r\n```powershell\r\nfunction Function-To-Mock {\r\n    param (\r\n        [System.Collections.Generic.List[PSCustomObject]] $ValueToCheck\r\n    )\r\n\r\n    Write-Host 'Stuff happened'\r\n}\r\n\r\nfunction Function-One {\r\n    param (\r\n        [System.Collections.Generic.List[PSCustomObject]] $ValueToPassIn\r\n    )\r\n\r\n    Function-To-Mock -ValueToCheck $ValueToPassIn\r\n}\r\n```\r\n\r\nCreate a Pester test (TestVariables.Tests.ps1) with the following:\r\n```powershell\r\nImport-Module TestModule -Force\r\n\r\nInModuleScope TestModule {\r\n    Describe 'Duplicate key issue' {\r\n        It 'Using parameter filter to check map entries' {\r\n            [System.Collections.Generic.List[PSCustomObject]] $res = @()\r\n            $res.Add([PSCustomObject]@{'ValueOne' = 'Some value'; 'ValueTwo' = 'It does something'})\r\n            $res.Add([PSCustomObject]@{'ValueOne' = 'Some other value'; 'ValueTwo' = 'It also does something'})\r\n\r\n            Mock Function-To-Mock\r\n\r\n            Function-One -ValueToPassIn $res\r\n\r\n            Assert-MockCalled Function-To-Mock -Scope It -Exactly 1 -ParameterFilter {\r\n                for ($i = 0; $i -lt $ValueToCheck.Count; $i++) {\r\n                    if ($ValueToCheck[$i].ValueOne -ne $res[$i].ValueOne -or $ValueToCheck[$i].ValueTwo -ne $res[$i].ValueTwo) {\r\n                        return $false\r\n                    }\r\n                }\r\n\r\n                return $true\r\n             }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nSetup the `PesterConfiguration` with Debug messages enabled and call `Invoke-Pester`:\r\n```powershell\r\n    $Configuration = [PesterConfiguration]::Default\r\n\r\n    $Configuration.Run.Path = \"<Path To Test>\"\r\n    $Configuration.CodeCoverage.Path = \"<Path to Module>\"\r\n\r\n    $Configuration.CodeCoverage.Enabled = $true\r\n\r\n    $Configuration.Debug.WriteDebugMessages = $true\r\n    $Configuration.Debug.WriteDebugMessagesFrom = \"CodeCoverage\"\r\n\r\n    Invoke-Pester -Configuration $Configuration\r\n```\r\n\r\n## Expected Behavior\r\n<!-- A clear and concise description of what you expected to happen. -->\r\nNo errors happen and the test behaves the same and when debug messages are disabled.\r\n\r\n## Current Behavior\r\n<!-- What happens instead of the expected behavior. -->\r\nAn argument exception occurs:\r\n```\r\nArgumentException: Item has already been added. Key in dictionary: 'res'  Key being added: 'res'\r\nMethodInvocationException: Exception calling \"Add\" with \"2\" argument(s): \"Item has already been added. Key in dictionary: 'res'  Key being added: 'res'\"\r\n```\r\n\r\n## Possible Solution? (optional)\r\n<!-- Have a solution in mind? Please suggest it here. -->\r\nIn Pester.psm1, this is where the error occurs, maybe this could be changed to an update using `$preExistingFilterVariables.[$v.VariablePath.UserPath]`, rather than an `Add()` call or just do not add it if already present.\r\n\r\n```powershell\r\n    # Check for variables in ParameterFilter that already exists in session. Risk of conflict\r\n    if ($PesterPreference.Debug.WriteDebugMessages.Value) {\r\n        $preExistingFilterVariables = @{}\r\n        foreach ($v in $filter.Ast.FindAll( { $args[0] -is [System.Management.Automation.Language.VariableExpressionAst] }, $true)) {\r\n            if ($existingVar = $SessionState.PSVariable.Get($v.VariablePath.UserPath)) {\r\n                $preExistingFilterVariables.Add($v.VariablePath.UserPath, $existingVar.Value)\r\n            }\r\n        }\r\n```\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2123/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2123/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2121",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2121/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2121/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2121/events",
      "html_url": "https://github.com/pester/Pester/issues/2121",
      "id": 1090702972,
      "node_id": "I_kwDOABKEIs5BAs58",
      "number": 2121,
      "title": "Should-InvokeInternal is missing the -Because parameter",
      "user": {
        "login": "jazzdelightsme",
        "id": 771085,
        "node_id": "MDQ6VXNlcjc3MTA4NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/771085?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jazzdelightsme",
        "html_url": "https://github.com/jazzdelightsme",
        "followers_url": "https://api.github.com/users/jazzdelightsme/followers",
        "following_url": "https://api.github.com/users/jazzdelightsme/following{/other_user}",
        "gists_url": "https://api.github.com/users/jazzdelightsme/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jazzdelightsme/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jazzdelightsme/subscriptions",
        "organizations_url": "https://api.github.com/users/jazzdelightsme/orgs",
        "repos_url": "https://api.github.com/users/jazzdelightsme/repos",
        "events_url": "https://api.github.com/users/jazzdelightsme/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jazzdelightsme/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-12-29T19:11:06Z",
      "updated_at": "2021-12-31T10:24:18Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "## General summary of the issue\r\nThe `Should-InvokeInternal` worker function is missing the `$Because` parameter. The `Should-Invoke` function *does* have the `-Because` parameter, and it turns around and passes it to `Should-InvokeInternal` by splatting in `$PSBoundParameters`:\r\n\r\n```powershell\r\n    $result = Should-InvokeInternal @PSBoundParameters\r\n```\r\n\r\nBut that results in a ParameterBindingException:\r\n\r\n```none\r\nException             : System.Management.Automation.ParameterBindingException: A parameter cannot be found that matches parameter name 'Because'.\r\n                           at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)\r\n                           at Should-Invoke(Closure , FunctionContext )\r\n                           at System.Management.Automation.PSScriptCmdlet.RunClause(Action`1 clause, Object dollarUnderbar, Object inputToProcess)\r\n                           at System.Management.Automation.CommandProcessorBase.Complete()\r\nTargetObject          :\r\nCategoryInfo          : InvalidArgument: (:) [Should-InvokeInternal], ParameterBindingException\r\nFullyQualifiedErrorId : NamedParameterNotFound,Should-InvokeInternal\r\nErrorDetails          :\r\nInvocationInfo        : System.Management.Automation.InvocationInfo\r\nScriptStackTrace      : at Should-Invoke, C:\\Users\\me\\Documents\\PowerShell\\Modules\\Pester\\5.3.1\\Pester.psm1: line 14898\r\n                        at Invoke-Assertion, C:\\Users\\me\\Documents\\PowerShell\\Modules\\Pester\\5.3.1\\Pester.psm1: line 8070\r\n                        at Should<End>, C:\\Users\\me\\Documents\\PowerShell\\Modules\\Pester\\5.3.1\\Pester.psm1: line 8020\r\n```\r\n\r\n\r\n\r\n## Describe your environment\r\n```none\r\nPester version     : 5.3.1 C:\\Users\\danthom\\Documents\\PowerShell\\Modules\\Pester\\5.3.1\\Pester.psm1\r\nPowerShell version : 7.2.1\r\nOS version         : Microsoft Windows NT 10.0.22523.0\r\n```\r\n\r\n## Steps to reproduce\r\n```powershell\r\nBeforeAll {\r\n    function MyFunc { }\r\n    Mock MyFunc { }\r\n}\r\nDescribe 'Repro' {\r\n    It 'should work' {\r\n        MyFunc\r\n        Should -Invoke -CommandName 'MyFunc' -Exactly 1 -Because 'I called it'\r\n    }\r\n}\r\n```\r\n\r\n## Expected Behavior\r\nTest should pass.\r\n\r\n## Current Behavior\r\n`ParameterBindingException: A parameter cannot be found that matches parameter name 'Because'.`\r\n\r\n## Possible Solution? (optional)\r\nMy guess is the parameter just needs to be plumbed through.",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2121/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2121/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2119",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2119/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2119/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2119/events",
      "html_url": "https://github.com/pester/Pester/issues/2119",
      "id": 1085152318,
      "node_id": "I_kwDOABKEIs5Arhw-",
      "number": 2119,
      "title": "Code Coverage Incorrect for Parameter Default When Using New Profiler",
      "user": {
        "login": "wethreetrees",
        "id": 3781142,
        "node_id": "MDQ6VXNlcjM3ODExNDI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3781142?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/wethreetrees",
        "html_url": "https://github.com/wethreetrees",
        "followers_url": "https://api.github.com/users/wethreetrees/followers",
        "following_url": "https://api.github.com/users/wethreetrees/following{/other_user}",
        "gists_url": "https://api.github.com/users/wethreetrees/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/wethreetrees/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/wethreetrees/subscriptions",
        "organizations_url": "https://api.github.com/users/wethreetrees/orgs",
        "repos_url": "https://api.github.com/users/wethreetrees/repos",
        "events_url": "https://api.github.com/users/wethreetrees/events{/privacy}",
        "received_events_url": "https://api.github.com/users/wethreetrees/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 675140872,
          "node_id": "MDU6TGFiZWw2NzUxNDA4NzI=",
          "url": "https://api.github.com/repos/pester/Pester/labels/Code%20coverage",
          "name": "Code coverage",
          "color": "fef2c0",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-12-20T19:58:41Z",
      "updated_at": "2021-12-21T11:25:11Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "## General summary of the issue\r\n\r\nWhen using the new code coverage profiler (`$PesterPreference.CodeCoverage.UseBreakpoints = $false`), Pester is reporting missing commands for parameter default value expressions.\r\n\r\nex:\r\n```powershell\r\n[Int]$Temperature = (Get-Random -Maximum 100 -Minimum 0)\r\n```\r\n\r\nThis is working, as expected, when using breakpoints (`$PesterPreference.CodeCoverage.UseBreakpoints = $true`)\r\n\r\n## Describe your environment\r\n\r\nPester version     : 5.3.1 C:\\Client\\PowerShell\\Modules\\Pester\\5.3.1\\Pester.psm1\r\nPowerShell version : 7.2.1\r\nOS version         : Microsoft Windows NT 10.0.19042.0\r\n\r\n## Steps to reproduce\r\n\r\n1. Download and extract the [PesterCCProfilerIssue.zip](https://github.com/pester/Pester/files/7747675/PesterCCProfilerIssue.zip)\r\n2. From the target directory, run:\r\n```powershell\r\n.\\Invoke-Tests.ps1\r\n```\r\n\r\n## Expected Behavior\r\n\r\nShould return no missing commands with 100% code coverage.\r\n\r\n## Current Behavior\r\n\r\nReturns:\r\n```powershell\r\nCovered 75% / 75%. 4 analyzed Commands in 1 File.\r\n Missed command:\r\n \r\nFile            Class Function        Line Command\r\n----            ----- --------        ---- -------\r\nTestModule.psm1       Get-Temperature    6 Get-Random -Maximum 100 -Minimum 0\r\n```\r\n\r\n## Possible Solution? (optional)\r\n\r\n😕\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2119/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2119/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2117",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2117/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2117/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2117/events",
      "html_url": "https://github.com/pester/Pester/issues/2117",
      "id": 1079828961,
      "node_id": "I_kwDOABKEIs5AXOHh",
      "number": 2117,
      "title": "Azure pipeline uses outdated images",
      "user": {
        "login": "fflaten",
        "id": 3436158,
        "node_id": "MDQ6VXNlcjM0MzYxNTg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3436158?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fflaten",
        "html_url": "https://github.com/fflaten",
        "followers_url": "https://api.github.com/users/fflaten/followers",
        "following_url": "https://api.github.com/users/fflaten/following{/other_user}",
        "gists_url": "https://api.github.com/users/fflaten/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fflaten/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fflaten/subscriptions",
        "organizations_url": "https://api.github.com/users/fflaten/orgs",
        "repos_url": "https://api.github.com/users/fflaten/repos",
        "events_url": "https://api.github.com/users/fflaten/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fflaten/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-12-14T14:30:04Z",
      "updated_at": "2021-12-14T14:37:14Z",
      "closed_at": null,
      "author_association": "COLLABORATOR",
      "active_lock_reason": null,
      "body": "The current Azure Pipeline uses deprecated and removed images in hosted agents\r\n\r\n- **vs2017-win2016** (used in \"PS_5_1_Windows_Server2016\" and \"PS7_Windows_Server2016\" test-steps)\r\n  - Deprecated\r\n  - _With the upcoming end of mainstream support on Windows 2016 in January 2022, we are deprecating vs2017-win2016 images starting November 15. Retirement is planned for March 2022._\r\n- **ubuntu-16.04**  (used in \"PS7_Ubuntu_16_04\" test-step)\r\n  - Was removed September 2021\r\n- **macOS-10.14**  (used in \"PS7_macOS_10_14_Mojave\" test-step)\r\n  - Was removed December 2021\r\n  - _Azure Pipelines is removing macOS 10.14 Mojave images (macOS-1014) from our hosted pools on December 10th_\r\n\r\nShould maybe update build image to \"windows-2022\" to use .NET 6.0 SDK at the same time.",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2117/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2117/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2115",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2115/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2115/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2115/events",
      "html_url": "https://github.com/pester/Pester/issues/2115",
      "id": 1079267124,
      "node_id": "I_kwDOABKEIs5AVE80",
      "number": 2115,
      "title": "Cannot mock functions captured by <scriptBlock>.GetNewClosure()",
      "user": {
        "login": "jazzdelightsme",
        "id": 771085,
        "node_id": "MDQ6VXNlcjc3MTA4NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/771085?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jazzdelightsme",
        "html_url": "https://github.com/jazzdelightsme",
        "followers_url": "https://api.github.com/users/jazzdelightsme/followers",
        "following_url": "https://api.github.com/users/jazzdelightsme/following{/other_user}",
        "gists_url": "https://api.github.com/users/jazzdelightsme/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/jazzdelightsme/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/jazzdelightsme/subscriptions",
        "organizations_url": "https://api.github.com/users/jazzdelightsme/orgs",
        "repos_url": "https://api.github.com/users/jazzdelightsme/repos",
        "events_url": "https://api.github.com/users/jazzdelightsme/events{/privacy}",
        "received_events_url": "https://api.github.com/users/jazzdelightsme/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 2,
      "created_at": "2021-12-14T03:29:40Z",
      "updated_at": "2022-01-09T00:29:01Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "## General summary of the issue\r\nThis is somewhere in between \"problem\" and \"feature request\" I think. The problem is that if I have a ScriptBlock that I got from `.GetNewClosure()`, and the ScriptBlock calls function \"Whatever\", I cannot mock \"Whatever\".\r\n\r\n## Describe your environment\r\n```none\r\nPester version     : 5.3.1 C:\\Users\\danthom\\Documents\\PowerShell\\Modules\\Pester\\5.3.1\\Pester.psm1\r\nPowerShell version : 7.2.0\r\nOS version         : Microsoft Windows NT 10.0.22518.0\r\n```\r\n\r\n## Steps to reproduce\r\nScript under test:\r\n```powershell\r\nfunction Foo\r\n{\r\n    $a = 'a'\r\n    $sb = {\r\n        Write-Host \"hello, the value of a is: $a\" -Fore Green\r\n    }.GetNewClosure()  # removing \".GetNewClosure()\" will make everything work\r\n\r\n    . $sb\r\n}\r\n```\r\nTest:\r\n```powershell\r\nBeforeAll {\r\n    Mock Write-Host { 'mocked' }\r\n    . $PSCommandPath.Replace('.Tests.ps1', '.ps1')\r\n}\r\n\r\nDescribe 'Foo' {\r\n    It 'does something' {\r\n\r\n        Foo | Should -Be 'mocked'\r\n    }\r\n}\r\n```\r\n\r\n## Expected^H^H^H Hoped-For Behavior\r\nI would really like to be able to mock `Write-Host` in this example. (So the test would pass.)\r\n\r\n\r\n## Current Behavior\r\n`Write-Host` is not mocked (or rather, the mock is not picked up inside the ScriptBlock `$sb`), so the `Foo` function calls the real `Write-Host`, and the test fails.\r\n\r\n## Possible Solution? (optional)\r\n\r\nI was really hoping that doing the mocking *before* running the SUT would mean that the closure()-ed ScriptBlock would \"close over\" the mock, but I think closures are implemented with some sort of module scoping trick, and the module used links directly to the global scope (and thus does not pick up the mock), or something like that.\r\n\r\nI could pass in the \"write-host\" command as a parameter to the ScriptBlock... but that starts to get annoying, even for a small number of things. So I'm interested to hear if there are any other techniques I could use, or ideas to get the mock to actually work.\r\n\r\nAnother crazy idea I thought of is to take advantage of the closure's captured variables, by capturing a \"test hook\" variable, like so:\r\n\r\nSUT:\r\n```powershell\r\nfunction Foo\r\n{\r\n    begin\r\n    {\r\n        function Get-TestHook { return { } }\r\n\r\n        $TestHook = Get-TestHook\r\n    }\r\n\r\n    process\r\n    {\r\n\r\n        $a = 'a'\r\n        $sb = {\r\n            . $TestHook \r\n            Write-Host \"hello, the value of a is: $a\" -Fore Green\r\n        }.GetNewClosure()\r\n\r\n        . $sb\r\n    }\r\n}\r\n```\r\nTest:\r\n```powershell\r\nBeforeAll {\r\n    . $PSCommandPath.Replace('.Tests.ps1', '.ps1')\r\n\r\n    function Get-TestHook { throw 'will be mocked' }\r\n\r\n    Mock Get-TestHook {\r\n        return {\r\n            [console]::writeline( 'whaoooooooo!' )\r\n            Mock Write-Host { 'mocked' }\r\n        }\r\n    }\r\n}\r\n\r\nDescribe 'Foo' {\r\n    It 'does something' {\r\n\r\n        Foo | Should -Be 'mocked'\r\n    }\r\n}\r\n```\r\n\r\nBut sadly, despite the mocked `Get-TestHook` being used (\"whaoooooooo!\" is printed to the console), it ***still*** doesn't mock `Write-Host`. :'(\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2115/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2115/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2113",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2113/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2113/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2113/events",
      "html_url": "https://github.com/pester/Pester/issues/2113",
      "id": 1065425014,
      "node_id": "I_kwDOABKEIs4_gRh2",
      "number": 2113,
      "title": "Pester throws if a test calls New-HashSet from ListFunctions package",
      "user": {
        "login": "scottbilas",
        "id": 964720,
        "node_id": "MDQ6VXNlcjk2NDcyMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/964720?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/scottbilas",
        "html_url": "https://github.com/scottbilas",
        "followers_url": "https://api.github.com/users/scottbilas/followers",
        "following_url": "https://api.github.com/users/scottbilas/following{/other_user}",
        "gists_url": "https://api.github.com/users/scottbilas/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/scottbilas/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/scottbilas/subscriptions",
        "organizations_url": "https://api.github.com/users/scottbilas/orgs",
        "repos_url": "https://api.github.com/users/scottbilas/repos",
        "events_url": "https://api.github.com/users/scottbilas/events{/privacy}",
        "received_events_url": "https://api.github.com/users/scottbilas/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-11-28T20:14:23Z",
      "updated_at": "2021-11-28T20:15:09Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "## General summary of the issue\r\n\r\nPester fails with a quite deep call stack if I have a test that uses `New-HashSet` from the ListFunctions package ([Gallery](https://www.powershellgallery.com/packages/ListFunctions/1.1); [GitHub](https://github.com/Yevrag35/PowerShell-ListFunctions)).\r\n\r\n## Describe your environment\r\n\r\nPester version     : 5.3.1 C:\\Users\\scott\\Documents\\PowerShell\\Modules\\Pester\\5.3.1\\Pester.psm1\r\nPowerShell version : 7.1.3\r\nOS version         : Microsoft Windows NT 10.0.22000.0\r\n\r\n(I also tried on the posh classic, same issue)\r\n\r\nPester version     : 5.3.1 C:\\Users\\scott\\Documents\\PowerShell\\Modules\\Pester\\5.3.1\\Pester.psm1\r\nPowerShell version : 5.1.22000.282\r\nOS version         : Microsoft Windows NT 10.0.22000.0\r\n\r\n## Steps to reproduce\r\n\r\n1. `Install-Module ListFunctions` (requires PSGallery as a PSRepository)\r\n2. Copy this script into test.ps1\r\n```powershell\r\n#Requires -Modules ListFunctions\r\nDescribe 'Demo' {\r\n    It 'Shows the issue' { New-HashSet }\r\n}\r\n```\r\n3. `Invoke-Pester test.ps1`\r\n\r\n## Expected Behavior\r\n\r\nShould not throw an exception. (If I run New-HashSet on its own, there's no problem.)\r\n\r\nThe code to `New-HashSet` is at [New-HashSet.ps1](https://github.com/Yevrag35/PowerShell-ListFunctions/blob/master/src/public/New-HashSet.ps1). Nothing in there seems particularly weird to me, but it is apparently confusing Pester.\r\n\r\n## Current Behavior\r\n\r\nI get a call stack like this:\r\n\r\n```\r\n invoke-pester C:\\temp\\test.ps1\r\n\r\nStarting discovery in 1 files.\r\nDiscovery found 1 tests in 1.14s.\r\nRunning tests.\r\nSystem.Management.Automation.ParameterBindingArgumentTransformationException: Cannot process argument transformation on parameter 'Condition'. Cannot convert the \"System.Collections.Generic.List`1[Pester.Block]\" value of type \"System.Collections.Generic.List`1[[Pester.Block, Pester, Version=5.3.1.0, Culture=neutral, PublicKeyToken=null]]\" to type \"System.Management.Automation.ScriptBlock\".\r\n ---> System.Management.Automation.ArgumentTransformationMetadataException: Cannot convert the \"System.Collections.Generic.List`1[Pester.Block]\" value of type \"System.Collections.Generic.List`1[[Pester.Block, Pester, Version=5.3.1.0, Culture=neutral, PublicKeyToken=null]]\" to type \"System.Management.Automation.ScriptBlock\".\r\n ---> System.Management.Automation.PSInvalidCastException: Cannot convert the \"System.Collections.Generic.List`1[Pester.Block]\" value of type \"System.Collections.Generic.List`1[[Pester.Block, Pester, Version=5.3.1.0, Culture=neutral, PublicKeyToken=null]]\" to type \"System.Management.Automation.ScriptBlock\".\r\n   at System.Management.Automation.LanguagePrimitives.ThrowInvalidCastException(Object valueToConvert, Type resultType)\r\n   at System.Management.Automation.LanguagePrimitives.ConvertNoConversion(Object valueToConvert, Type resultType, Boolean recurse, PSObject originalValueToConvert, IFormatProvider formatProvider, TypeTable backupTable)\r\n   at System.Management.Automation.LanguagePrimitives.ConversionData`1.Invoke(Object valueToConvert, Type resultType, Boolean recurse, PSObject originalValueToConvert, IFormatProvider formatProvider, TypeTable backupTable)\r\n   at System.Management.Automation.LanguagePrimitives.ConvertTo(Object valueToConvert, Type resultType, Boolean recursion, IFormatProvider formatProvider, TypeTable backupTypeTable)                                                                                                at System.Management.Automation.ArgumentTypeConverterAttribute.Transform(EngineIntrinsics engineIntrinsics, Object inputData, Boolean bindingParameters, Boolean bindingScriptCmdlet)                                                                                             --- End of inner exception stack trace ---\r\n   at System.Management.Automation.ArgumentTypeConverterAttribute.Transform(EngineIntrinsics engineIntrinsics, Object inputData, Boolean bindingParameters, Boolean bindingScriptCmdlet)\r\n   at System.Management.Automation.ParameterBinderBase.BindParameter(CommandParameterInternal parameter, CompiledCommandParameter parameterMetadata, ParameterBindingFlags flags)\r\n   --- End of inner exception stack trace ---\r\n   at System.Management.Automation.ExceptionHandlingOps.CheckActionPreference(FunctionContext funcContext, Exception exception)\r\n   at System.Management.Automation.Interpreter.ActionCallInstruction`2.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.EnterTryCatchFinallyInstruction.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.Interpreter.Run(InterpretedFrame frame)\r\n   at System.Management.Automation.Interpreter.LightLambda.RunVoid1[T0](T0 arg0)\r\n   at System.Management.Automation.PSScriptCmdlet.RunClause(Action`1 clause, Object dollarUnderbar, Object inputToProcess)\r\n   at System.Management.Automation.PSScriptCmdlet.DoProcessRecord()\r\n   at System.Management.Automation.CommandProcessor.ProcessRecord()\r\nat none, C:\\Users\\scott\\Documents\\PowerShell\\Modules\\Pester\\5.3.1\\Pester.psm1: line 234\r\nat PostProcess-ExecutedBlock<Process>, C:\\Users\\scott\\Documents\\PowerShell\\Modules\\Pester\\5.3.1\\Pester.psm1: line 2713\r\nat Run-Test, C:\\Users\\scott\\Documents\\PowerShell\\Modules\\Pester\\5.3.1\\Pester.psm1: line 1671\r\nat Invoke-Test, C:\\Users\\scott\\Documents\\PowerShell\\Modules\\Pester\\5.3.1\\Pester.psm1: line 2465\r\nat Invoke-Pester<End>, C:\\Users\\scott\\Documents\\PowerShell\\Modules\\Pester\\5.3.1\\Pester.psm1: line 5225\r\nat <ScriptBlock>, <No file>: line 1\r\n```",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2113/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2113/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2112",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2112/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2112/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2112/events",
      "html_url": "https://github.com/pester/Pester/issues/2112",
      "id": 1062279414,
      "node_id": "I_kwDOABKEIs4_URj2",
      "number": 2112,
      "title": "Run.Passthru $true doesn't populate the variable with the results psobject",
      "user": {
        "login": "ChrisGibson1982",
        "id": 13312806,
        "node_id": "MDQ6VXNlcjEzMzEyODA2",
        "avatar_url": "https://avatars.githubusercontent.com/u/13312806?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ChrisGibson1982",
        "html_url": "https://github.com/ChrisGibson1982",
        "followers_url": "https://api.github.com/users/ChrisGibson1982/followers",
        "following_url": "https://api.github.com/users/ChrisGibson1982/following{/other_user}",
        "gists_url": "https://api.github.com/users/ChrisGibson1982/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/ChrisGibson1982/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/ChrisGibson1982/subscriptions",
        "organizations_url": "https://api.github.com/users/ChrisGibson1982/orgs",
        "repos_url": "https://api.github.com/users/ChrisGibson1982/repos",
        "events_url": "https://api.github.com/users/ChrisGibson1982/events{/privacy}",
        "received_events_url": "https://api.github.com/users/ChrisGibson1982/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-11-24T10:56:25Z",
      "updated_at": "2021-11-24T10:56:25Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "## General summary of the issue\r\nIf I run the invoke-pester command as the value of a variable ($result = invoke...) , the variable is not populated with the command output object.  However, I can see the object when the command is run.  I have tried tweaking the output verbosity, but this makes no difference.\r\n\r\n## Describe your environment\r\n\r\nPester version     : 5.3.1 C:\\program files\\powershell\\7\\Modules\\Pester\\5.3.1\\Pester.psm1\r\nPowerShell version : 7.2.0\r\nOS version         : Microsoft Windows NT 10.0.19043.0\r\n\r\n## Steps to reproduce\r\n```powershell\r\n\r\n$configuration = [PesterConfiguration]@{\r\n    Run    = @{\r\n        Path          = './powershell'\r\n        TestExtension = '.tests.ps1'\r\n        Exit          = $true\r\n        PassThru      = $true\r\n    }\r\n    Should = @{\r\n        ErrorAction = 'SilentlyContinue'\r\n    }\r\n\r\n    Output = @{\r\n        Verbosity = 'Normal'\r\n    }\r\n\r\n}\r\n\r\n$result = Invoke-Pester -Configuration $configuration\r\n\r\n```\r\n\r\n## Expected Behavior\r\nThe results ps object would be accessibale via the variable name, e.g. $result.failedcount etc\r\n\r\n\r\n## Current Behavior\r\nThe variable is empty\r\n\r\n## Possible Solution? (optional)\r\n<!-- Have a solution in mind? Please suggest it here. -->\r\n\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2112/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2112/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2110",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2110/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2110/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2110/events",
      "html_url": "https://github.com/pester/Pester/issues/2110",
      "id": 1061610394,
      "node_id": "I_kwDOABKEIs4_RuOa",
      "number": 2110,
      "title": "Inconsistent -ForEach parameter casing throws off vscode-powershell formatter ",
      "user": {
        "login": "enoorden",
        "id": 49784059,
        "node_id": "MDQ6VXNlcjQ5Nzg0MDU5",
        "avatar_url": "https://avatars.githubusercontent.com/u/49784059?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/enoorden",
        "html_url": "https://github.com/enoorden",
        "followers_url": "https://api.github.com/users/enoorden/followers",
        "following_url": "https://api.github.com/users/enoorden/following{/other_user}",
        "gists_url": "https://api.github.com/users/enoorden/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/enoorden/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/enoorden/subscriptions",
        "organizations_url": "https://api.github.com/users/enoorden/orgs",
        "repos_url": "https://api.github.com/users/enoorden/repos",
        "events_url": "https://api.github.com/users/enoorden/events{/privacy}",
        "received_events_url": "https://api.github.com/users/enoorden/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-11-23T18:53:47Z",
      "updated_at": "2021-11-23T18:54:29Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "## General summary of the issue\r\nThe 'Context' function's parameter Foreach uses a different casing as on the 'It' and 'Describe' function\r\nsomehow this is causing the vscode-powershell formatter to flip between 2 different casings each time you format a PowerShell file\r\n\r\n![Animation3](https://user-images.githubusercontent.com/49784059/143085153-b588ebf2-d5a5-4e28-ac20-763596b48554.gif)\r\n\r\nnot sure why it also happens on the 'It' command, but as you can see 'Describe' is not affected\r\n\r\n## Describe your environment\r\npester 5.3.1\r\nvscode-powershell v2021.10.2\r\nvscode  1.62.3\r\n\r\n## Steps to reproduce\r\nCreate .ps1 file with this test code : \r\n```poewrshell\r\n    Describe 'DescribeName' -ForEach @() {\r\n        Context 'ContextName' -Foreach @() {\r\n            It 'ItName' -ForEach @() {\r\n                Assertion\r\n            }\r\n        }\r\n    }\r\n```\r\npress Shift-Alt-F multiple times\r\n\r\n## Expected Behavior\r\nPick one casing and stick with it\r\n\r\n## Current Behavior\r\nflips between casings\r\n\r\n## Possible Solution? (optional)\r\nhttps://github.com/pester/Pester/blob/main/src/functions/Context.ps1#L82 \r\n/src/functions/Context.ps1 : change '$Foreach' to '$ForEach'\r\n\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2110/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2110/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2108",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2108/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2108/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2108/events",
      "html_url": "https://github.com/pester/Pester/issues/2108",
      "id": 1058953227,
      "node_id": "I_kwDOABKEIs4_HlgL",
      "number": 2108,
      "title": "Can't set CoveragePercentTarget in New-PesterConfiguration",
      "user": {
        "login": "Jaykul",
        "id": 192942,
        "node_id": "MDQ6VXNlcjE5Mjk0Mg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/192942?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Jaykul",
        "html_url": "https://github.com/Jaykul",
        "followers_url": "https://api.github.com/users/Jaykul/followers",
        "following_url": "https://api.github.com/users/Jaykul/following{/other_user}",
        "gists_url": "https://api.github.com/users/Jaykul/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Jaykul/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Jaykul/subscriptions",
        "organizations_url": "https://api.github.com/users/Jaykul/orgs",
        "repos_url": "https://api.github.com/users/Jaykul/repos",
        "events_url": "https://api.github.com/users/Jaykul/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Jaykul/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/pester/Pester/milestones/27",
        "html_url": "https://github.com/pester/Pester/milestone/27",
        "labels_url": "https://api.github.com/repos/pester/Pester/milestones/27/labels",
        "id": 6855357,
        "node_id": "MDk6TWlsZXN0b25lNjg1NTM1Nw==",
        "number": 27,
        "title": "5.4",
        "description": null,
        "creator": {
          "login": "nohwnd",
          "id": 5735905,
          "node_id": "MDQ6VXNlcjU3MzU5MDU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5735905?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/nohwnd",
          "html_url": "https://github.com/nohwnd",
          "followers_url": "https://api.github.com/users/nohwnd/followers",
          "following_url": "https://api.github.com/users/nohwnd/following{/other_user}",
          "gists_url": "https://api.github.com/users/nohwnd/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/nohwnd/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/nohwnd/subscriptions",
          "organizations_url": "https://api.github.com/users/nohwnd/orgs",
          "repos_url": "https://api.github.com/users/nohwnd/repos",
          "events_url": "https://api.github.com/users/nohwnd/events{/privacy}",
          "received_events_url": "https://api.github.com/users/nohwnd/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 9,
        "closed_issues": 0,
        "state": "open",
        "created_at": "2021-06-15T08:16:42Z",
        "updated_at": "2021-11-22T06:27:09Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 1,
      "created_at": "2021-11-19T22:05:33Z",
      "updated_at": "2021-11-22T06:27:56Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "<!-- Thank you for using Pester and taking the time to report this issue!\r\nOnly Pester 4.10.x and 5.x.x are supported, try updating to the latest version to see if that solves your problem. See [Installation and update guide](https://pester.dev/docs/introduction/installation).\r\n\r\n- Please update Pester and retest your code before submitting a bug report. See [Installation and update guide](https://pester.dev/docs/introduction/installation).\r\n- Search for existing issues.\r\n- Pester 5 introduced breaking changes and some features were removed or are not yet migrated. See [Breaking changes](https://github.com/pester/Pester#breaking-changes)\r\n-->\r\n\r\n## Can't set CoveragePercentTarget in New-PesterConfiguration\r\n\r\n```PowerShell\r\n$Config = New-PesterConfiguration @{ CodeCoverage = @{ CoveragePercentTarget = 90 }}\r\n$Config.Codecoverage.CoveragePercentTarget\r\n```\r\n```Text\r\nDefault Description                                                            Value\r\n------- -----------                                                            -----\r\n     75 Target percent of code coverage that you want to achieve, default 75%.    75\r\n```\r\n\r\nI'm **really unhappy** with this command, if I'm honest. How is it possible that this doesn't produce an error:\r\n\r\n```PowerShell\r\n$Config = New-PesterConfiguration @{ Nonsense = @{ NobobyCares = 90 }}\r\n```\r\n\r\nI can't figure out any way to make this command actually set the coverage target. I had to manually set the `.Value` on the output object.\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2108/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2108/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2107",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2107/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2107/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2107/events",
      "html_url": "https://github.com/pester/Pester/issues/2107",
      "id": 1057953188,
      "node_id": "I_kwDOABKEIs4_DxWk",
      "number": 2107,
      "title": "Ignore errors when Pester fails to delete files from the test drive",
      "user": {
        "login": "splatteredbits",
        "id": 1082153,
        "node_id": "MDQ6VXNlcjEwODIxNTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1082153?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/splatteredbits",
        "html_url": "https://github.com/splatteredbits",
        "followers_url": "https://api.github.com/users/splatteredbits/followers",
        "following_url": "https://api.github.com/users/splatteredbits/following{/other_user}",
        "gists_url": "https://api.github.com/users/splatteredbits/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/splatteredbits/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/splatteredbits/subscriptions",
        "organizations_url": "https://api.github.com/users/splatteredbits/orgs",
        "repos_url": "https://api.github.com/users/splatteredbits/repos",
        "events_url": "https://api.github.com/users/splatteredbits/events{/privacy}",
        "received_events_url": "https://api.github.com/users/splatteredbits/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 201863597,
          "node_id": "MDU6TGFiZWwyMDE4NjM1OTc=",
          "url": "https://api.github.com/repos/pester/Pester/labels/Feature",
          "name": "Feature",
          "color": "207de5",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-11-18T23:22:33Z",
      "updated_at": "2021-11-19T09:33:01Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "<!-- Thank you for using Pester!\r\nGood ideas are always welcome and there's no commitment to implement it yourself, but feel free to contribute after an initial discussion.\r\n\r\n- Try out the latest version of Pester - maybe your request is already available. See [Installation and update guide](https://pester.dev/docs/introduction/installation).\r\n- See [README](https://github.com/pester/Pester) for the latest updates and newest features.\r\n- Search for existing issues to matches your idea. A popular issue/request is more likely to be prioritized.\r\n-->\r\n\r\n## Summary of the feature request\r\nCurrently, if Pester fails to delete files from the test drive after a test completes, you see a bunch of errors. Because of PowerShell's verbose error formats, you usually get a wall of red text and it's hard to figure out if a test failed or not. We havesome tests that load an assembly into PowerShell from the test drive. PowerShell locks all the assembly files it has loaded, which causes Pester's `Remove-Item` call to write errors.\r\n\r\nSince the user can't do anything about whether or not Pester successfully cleaned up the test drive and it has no impact on whether or not a test succeeds, Pester should ignore these errors completely, or at the very list silently continue past them.\r\n\r\n\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2107/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2107/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2106",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2106/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2106/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2106/events",
      "html_url": "https://github.com/pester/Pester/issues/2106",
      "id": 1057624445,
      "node_id": "I_kwDOABKEIs4_ChF9",
      "number": 2106,
      "title": "Getting MethodException: Cannot find an overload for \".ctor\"  with PSScriptAnalyzer exclusion line",
      "user": {
        "login": "asears",
        "id": 7253192,
        "node_id": "MDQ6VXNlcjcyNTMxOTI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7253192?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/asears",
        "html_url": "https://github.com/asears",
        "followers_url": "https://api.github.com/users/asears/followers",
        "following_url": "https://api.github.com/users/asears/following{/other_user}",
        "gists_url": "https://api.github.com/users/asears/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/asears/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/asears/subscriptions",
        "organizations_url": "https://api.github.com/users/asears/orgs",
        "repos_url": "https://api.github.com/users/asears/repos",
        "events_url": "https://api.github.com/users/asears/events{/privacy}",
        "received_events_url": "https://api.github.com/users/asears/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-11-18T17:38:34Z",
      "updated_at": "2021-11-18T23:11:28Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "## General summary of the issue\r\n\r\nThis is a low priority issue and goes back awhile but something I thought might help others.\r\n\r\nWhen I call out from a Pester test script to a script under test, the test throws an error on the call to the SUT script.\r\n\r\n```powershell\r\n##[error]    [-] It should return no errors 94ms (31ms|63ms)\r\n##[error]     MethodException: Cannot find an overload for \".ctor\" and the argument count: \"1\"\r\n```\r\nRemoving invalid the Diagnostics.CodeAnalysis.SuppressMessageAttribute line fixes the issue.\r\n\r\nFixing the signature of the attribute fixes the issue.\r\n\r\nSee https://github.com/psake/psake/issues/164\r\n\r\n## Describe your environment\r\nUsing latest Pester version in a Windows-2019 Azure Devops CI pipeline.\r\n<!-- Please provide the output of this script:\r\n(Invoke-WebRequest -Uri \"https://git.io/JTinj\" -UseBasicParsing).Content | Invoke-Expression\r\n\r\nThe script collects Operating System, Pester version and PowerShell version.\r\nYou can open the URL in a browser to view the code before running it. -->\r\n\r\n\r\n## Steps to reproduce\r\n\r\nthis doesn't work\r\n```powershell\r\n    <# my synopsis header #>\r\n[Diagnostics.CodeAnalysis.SuppressMessageAttribute(\"PSAvoidUsingCmdletAliases\")]\r\nparam()\r\n# my code\r\n```\r\nthis works\r\n```powershell\r\n    <# my synopsis header #>\r\n[Diagnostics.CodeAnalysis.SuppressMessageAttribute(\"PSAvoidUsingCmdletAliases\", \"\")]\r\nparam()\r\n# my code\r\n```\r\n\r\nOddly enough, it appears to cache the first successful signature hit.  If I have 2 scripts with this issue, and fix the first tested script, the second script passes with the invalid signature SuppressMessageAttribute.\r\n\r\nPlus this script passes Invoke-ScriptAnalyzer and ignores the warning so I guess there may be a bug (or a fix) in the validation of that library's signature to raise this or suppress this issue.\r\n\r\n## Possible Solution? (optional)\r\n\r\nThe message is really cryptic and a better description or troubleshooting message could help.\r\n\r\nSome issue with the C# AST parser error handling perhaps.  A better error out of the parser would probably help, identifying the line of interest rather than just the called script, or a suggestion to increase verbosity to troubleshoot further.\r\n\r\nSee https://github.com/psake/psake/issues/164\r\n\r\n\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2106/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2106/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2105",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2105/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2105/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2105/events",
      "html_url": "https://github.com/pester/Pester/issues/2105",
      "id": 1050915983,
      "node_id": "I_kwDOABKEIs4-o7SP",
      "number": 2105,
      "title": "\"Should -HaveParameter 'param' -Not -Mandatory\" passes tests if parameter is not present",
      "user": {
        "login": "enoorden",
        "id": 49784059,
        "node_id": "MDQ6VXNlcjQ5Nzg0MDU5",
        "avatar_url": "https://avatars.githubusercontent.com/u/49784059?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/enoorden",
        "html_url": "https://github.com/enoorden",
        "followers_url": "https://api.github.com/users/enoorden/followers",
        "following_url": "https://api.github.com/users/enoorden/following{/other_user}",
        "gists_url": "https://api.github.com/users/enoorden/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/enoorden/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/enoorden/subscriptions",
        "organizations_url": "https://api.github.com/users/enoorden/orgs",
        "repos_url": "https://api.github.com/users/enoorden/repos",
        "events_url": "https://api.github.com/users/enoorden/events{/privacy}",
        "received_events_url": "https://api.github.com/users/enoorden/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-11-11T12:13:26Z",
      "updated_at": "2021-11-11T16:08:13Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "## General summary of the issue\r\n\"Should -HaveParameter 'param' -Not -Mandatory\" passes tests if parameter is not present\r\n\r\n\r\n## Describe your environment\r\nPester version     : 5.3.1 C:\\Users\\___\\Documents\\PowerShell\\Modules\\pester\\5.3.1\\Pester.psm1\r\nPowerShell version : 7.2.0\r\nOS version         : Microsoft Windows NT 10.0.19043.0\r\n\r\n\r\n## Steps to reproduce\r\n```powershell\r\nfunction hi {\r\n    param(\r\n        [parameter(mandatory)]\r\n        [string]$name\r\n    )\r\n    \"hi $name\"\r\n}\r\n\r\nContext 'ctx' {\r\n    It 'test missing param' {\r\n        $fnc = Get-Command 'hi'\r\n        $fnc | Should -HaveParameter 'anotherParam' -Not -Mandatory\r\n    }\r\n}\r\n```\r\n\r\n```powershell\r\nContext ctx\r\n  [+] test missing param 6ms (3ms|3ms)\r\n```\r\n\r\n\r\n## Expected Behavior\r\nwould expect the test to fail.\r\n\r\nI can see how a parameter which is not declared is actually not mandatory. But i would still expect the 'Should -HaveParameter' to first check the actual presence of the parameter.\r\n\r\n\r\n## Current Behavior\r\ntest succeeds\r\n\r\n\r\n## Possible Solution? (optional)\r\nuse two tests\r\n```powershell\r\nContext 'ctx' {\r\n    It 'test missing param' {\r\n        $fnc = Get-Command 'hi'\r\n        $fnc | Should -HaveParameter 'anotherParam'\r\n        $fnc | Should -HaveParameter 'anotherParam' -Not -Mandatory\r\n    }\r\n}\r\n```\r\n\r\n```powershell\r\n [-] test missing param 17ms (8ms|9ms)\r\n   Expected command hi to have a parameter anotherParam, but the parameter is missing.\r\n```\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2105/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2105/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2100",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2100/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2100/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2100/events",
      "html_url": "https://github.com/pester/Pester/issues/2100",
      "id": 1044224185,
      "node_id": "I_kwDOABKEIs4-PZi5",
      "number": 2100,
      "title": "Casting hashtable to PesterConfiguration fails to convert ['Run']['Path'] when its an ArrayList",
      "user": {
        "login": "splatteredbits",
        "id": 1082153,
        "node_id": "MDQ6VXNlcjEwODIxNTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1082153?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/splatteredbits",
        "html_url": "https://github.com/splatteredbits",
        "followers_url": "https://api.github.com/users/splatteredbits/followers",
        "following_url": "https://api.github.com/users/splatteredbits/following{/other_user}",
        "gists_url": "https://api.github.com/users/splatteredbits/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/splatteredbits/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/splatteredbits/subscriptions",
        "organizations_url": "https://api.github.com/users/splatteredbits/orgs",
        "repos_url": "https://api.github.com/users/splatteredbits/repos",
        "events_url": "https://api.github.com/users/splatteredbits/events{/privacy}",
        "received_events_url": "https://api.github.com/users/splatteredbits/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-11-03T23:44:12Z",
      "updated_at": "2021-11-04T02:10:06Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "<!-- Thank you for using Pester and taking the time to report this issue!\r\nOnly Pester 4.10.x and 5.x.x are supported, try updating to the latest version to see if that solves your problem. See [Installation and update guide](https://pester.dev/docs/introduction/installation).\r\n\r\n- Please update Pester and retest your code before submitting a bug report. See [Installation and update guide](https://pester.dev/docs/introduction/installation).\r\n- Search for existing issues.\r\n- Pester 5 introduced breaking changes and some features were removed or are not yet migrated. See [Breaking changes](https://github.com/pester/Pester#breaking-changes)\r\n-->\r\n\r\n## General summary of the issue\r\nWhen casting a hashtable to a `PesterConfiguration` object, `Collections.ArrayList` objects aren't converted. Properties retain their default value.\r\n\r\n## Describe your environment\r\n```\r\nPester version     : 5.3.1 C:\\********\\PSModules\\Pester\\5.3.1\\Pester.psm1\r\nPowerShell version : 7.1.5\r\nOS version         : Microsoft Windows NT 10.0.19043.0\r\n```\r\n\r\n## Steps to reproduce\r\nThis code:\r\n```\r\n$paths = [Collections.ArrayList]::New();\r\n[void]$paths.Add('one')\r\n[void]$paths.Add('two')\r\n[void]$paths.add('three')\r\n([PesterConfiguration]@{ Run = @{ Path = $paths } }).Run.Path\r\n```\r\noutputs \r\n\r\n```\r\n\r\nDefault Description                                                                                 Value\r\n------- -----------                                                                                 -----\r\n{.}     Directories to be searched for tests, paths directly to test files, or combination of both. {.}\r\n```\r\n\r\nAs you can see, the value is `{.}`. I expected the value to be `{one, two, three}`.\r\n\r\nNow, normally, this wouldn't be a problem. Just case `$paths` to a `[String[]]` when assigning it to the `Paths` property. Unfortunately, this doesn't work if you're running Pester in a background job. PowerShell converts *all* arrays passed to a background job to a `Collections.ArrayList` object:\r\n\r\n```\r\n$array = @('one','two','three')\r\nStart-Job { ($using:array).GetType() } | Receive-Job -Wait -AutoRemoveJob\r\n```\r\nreturns\r\n```\r\n\r\nIsPublic IsSerial Name                                     BaseType\r\n-------- -------- ----                                     --------\r\nTrue     True     ArrayList                                System.Object\r\n```\r\n\r\n\r\n<!-- Provide steps and/or sample code to reproduce the issue.\r\nTry to make it as concise as possible, removing irrelevant steps/code and providing sample data where possible. This will enable us to help you faster.\r\nTip: Placing Powershell code in a codeblock like below makes it more readable.\r\n\r\n```powershell\r\n    #My code\r\n```\r\n-->\r\n\r\n\r\n## Expected Behavior\r\nI would expect that when converting a hashtable to a `PesterConfiguration` object, Pester handles when an object is an array list or maybe any other type of enumerable.\r\n\r\n\r\n## Current Behavior\r\nValues that are `Collections.ArrayList` are treated as not set.\r\n\r\n\r\n## Possible Solution? (optional)\r\n\r\n```\r\nif( $value -is [IEnumerable] )\r\n{\r\n   $convertedValue = $value | Write-Output\r\n}\r\n```\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2100/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2100/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2098",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2098/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2098/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2098/events",
      "html_url": "https://github.com/pester/Pester/issues/2098",
      "id": 1041171802,
      "node_id": "I_kwDOABKEIs4-DwVa",
      "number": 2098,
      "title": "Configuration option to display tags automatically as part of the Describe, Context or It titles",
      "user": {
        "login": "markwragg",
        "id": 6706196,
        "node_id": "MDQ6VXNlcjY3MDYxOTY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6706196?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/markwragg",
        "html_url": "https://github.com/markwragg",
        "followers_url": "https://api.github.com/users/markwragg/followers",
        "following_url": "https://api.github.com/users/markwragg/following{/other_user}",
        "gists_url": "https://api.github.com/users/markwragg/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/markwragg/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/markwragg/subscriptions",
        "organizations_url": "https://api.github.com/users/markwragg/orgs",
        "repos_url": "https://api.github.com/users/markwragg/repos",
        "events_url": "https://api.github.com/users/markwragg/events{/privacy}",
        "received_events_url": "https://api.github.com/users/markwragg/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 201863597,
          "node_id": "MDU6TGFiZWwyMDE4NjM1OTc=",
          "url": "https://api.github.com/repos/pester/Pester/labels/Feature",
          "name": "Feature",
          "color": "207de5",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 3,
      "created_at": "2021-11-01T13:24:50Z",
      "updated_at": "2021-11-27T07:15:43Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "## Summary of the feature request\r\n\r\nAfter executing a set of tests, I sometimes what to rerun a subset of the tests (i.e where they have failed). I use tags for this, but I can sometimes have a hard time remembering the Tag name I set to various blocks. As a result I've started to append \"[Tag: mytag ]\" into the names of my Context blocks, but it occurred to me it might be a nice feature if there was a configuration option that appended the tags into the names automatically in a similar way.\r\n\r\n## How should it work?\r\n\r\nWhen using `New-PesterConfiguration` a new configuration setting called `Output.Tags` could be set to `$true` and would then automatically append the name of any tags into the title of the relevant block such as \"Title of block [Tags: tag1, tag2, tag3.]\".\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2098/reactions",
        "total_count": 3,
        "+1": 3,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2098/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2096",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2096/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2096/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2096/events",
      "html_url": "https://github.com/pester/Pester/issues/2096",
      "id": 1034418253,
      "node_id": "I_kwDOABKEIs49p_hN",
      "number": 2096,
      "title": "Error in New-Fixture help",
      "user": {
        "login": "shivtorov",
        "id": 31003608,
        "node_id": "MDQ6VXNlcjMxMDAzNjA4",
        "avatar_url": "https://avatars.githubusercontent.com/u/31003608?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/shivtorov",
        "html_url": "https://github.com/shivtorov",
        "followers_url": "https://api.github.com/users/shivtorov/followers",
        "following_url": "https://api.github.com/users/shivtorov/following{/other_user}",
        "gists_url": "https://api.github.com/users/shivtorov/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/shivtorov/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/shivtorov/subscriptions",
        "organizations_url": "https://api.github.com/users/shivtorov/orgs",
        "repos_url": "https://api.github.com/users/shivtorov/repos",
        "events_url": "https://api.github.com/users/shivtorov/events{/privacy}",
        "received_events_url": "https://api.github.com/users/shivtorov/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-10-24T13:34:10Z",
      "updated_at": "2021-10-24T18:30:36Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Code in the examples 2 and 3 fails due to incorrect sequence of positional parameter values.\r\nhttps://github.com/pester/Pester/blob/13d65958ae6dc33bb18824b6acb48509f11b6784/src/functions/New-Fixture.ps1#L49\r\n\r\nCorrect code for example 2:\r\n`New-Fixture Clean C:\\Projects\\Cleaner`\r\n\r\nCorrect code for example 3:\r\n`New-Fixture Clean Cleaner`",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2096/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2096/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2095",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2095/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2095/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2095/events",
      "html_url": "https://github.com/pester/Pester/issues/2095",
      "id": 1033710594,
      "node_id": "I_kwDOABKEIs49nSwC",
      "number": 2095,
      "title": "InModuleScope mock is not called on second run from within class (in PS v5.1; PSv7 unaffected; non-class tests unaffected)",
      "user": {
        "login": "fsackur",
        "id": 3678789,
        "node_id": "MDQ6VXNlcjM2Nzg3ODk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3678789?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fsackur",
        "html_url": "https://github.com/fsackur",
        "followers_url": "https://api.github.com/users/fsackur/followers",
        "following_url": "https://api.github.com/users/fsackur/following{/other_user}",
        "gists_url": "https://api.github.com/users/fsackur/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fsackur/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fsackur/subscriptions",
        "organizations_url": "https://api.github.com/users/fsackur/orgs",
        "repos_url": "https://api.github.com/users/fsackur/repos",
        "events_url": "https://api.github.com/users/fsackur/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fsackur/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-10-22T15:34:30Z",
      "updated_at": "2021-10-22T15:36:02Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "Issue occurs in PS v5.1 but not PS v7.1.4:\r\n\r\n```\r\nPester version     : 5.3.1 C:\\Users\\mich8638\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.1\\Pester.psm1\r\nPowerShell version : 5.1.19041.1237\r\nOS version         : Microsoft Windows NT 10.0.19041.0\r\n```\r\n\r\n## General summary of the issue\r\n\r\n- I force-remove-and-import the module at the top of each test script\r\n- the first run of Invoke-Pester, my mocks are called\r\n- any further runs of invoke-pester in the same powershell session fail to call the mock\r\n\r\nIf I remove the module-reimport stuff, the issue does not occur. (My team has a coding standard around the re-import, though).\r\nThe issue also occurs if I manually remove-reimport the module between test runs.\r\n\r\n## Steps to reproduce\r\n\r\ntestscript.ps1:\r\n```powershell\r\ngmo SUT | rmo\r\nipmo $PSScriptRoot\\SUT.psm1 -Global -Force\r\n\r\nInModuleScope SUT {\r\n\r\n    Describe \"SutClass\" {\r\n\r\n        BeforeAll {\r\n            Mock Write-Log\r\n            $Sut = [SutClass]::new()\r\n        }\r\n\r\n        It \"Writes a log message\" {\r\n            Should -Invoke Write-Log -Scope Describe\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nSUT.psm1:\r\n```powershell\r\nclass SutClass\r\n{\r\n    SutClass()\r\n    {\r\n        Write-Log \"foo\"\r\n    }\r\n}\r\n\r\nfunction Write-Log\r\n{\r\n    param ($Message)\r\n    throw \"Command was not mocked!\"\r\n}\r\n```\r\n\r\n-->\r\n\r\n\r\n## Expected Behavior\r\nRunning `Invoke-Pester .\\testscript.ps1` passes in powershell v5.1 no matter how many times you run it in the console session.\r\n\r\n## Current Behavior\r\nRunning `Invoke-Pester .\\testscript.ps1` passes the first time but fails all following times:\r\n```\r\nC:\\githubdata\\PesterBug2  1.15s\r\n❯ Invoke-Pester .\\testscript.ps1\r\n\r\nStarting discovery in 1 files.\r\nDiscovery found 1 tests in 22ms.\r\nRunning tests.\r\n[+] C:\\githubdata\\PesterBug2\\testscript.ps1 297ms (206ms|71ms)\r\nTests completed in 308ms\r\nTests Passed: 1, Failed: 0, Skipped: 0 NotRun: 0\r\n\r\n\r\nC:\\githubdata\\PesterBug2  1.382s\r\n❯ Invoke-Pester .\\testscript.ps1\r\n\r\nStarting discovery in 1 files.\r\nDiscovery found 1 tests in 11ms.\r\nRunning tests.\r\n[-] Describe SutClass failed\r\n RuntimeException: Command was not mocked!\r\n at Write-Log, C:\\githubdata\\PesterBug2\\SUT.psm1:12\r\n at SutClass, C:\\githubdata\\PesterBug2\\SUT.psm1:5\r\n at <ScriptBlock>, C:\\githubdata\\PesterBug2\\testscript.ps1:12\r\nTests completed in 135ms\r\nTests Passed: 0, Failed: 1, Skipped: 0 NotRun: 0\r\nBeforeAll \\ AfterAll failed: 1\r\n  - SutClass\r\n```\r\n\r\nI suspect that this is related somehow to #1939 and some kind of trickiness around PS classes not truly re-importing.",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2095/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2095/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2093",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2093/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2093/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2093/events",
      "html_url": "https://github.com/pester/Pester/issues/2093",
      "id": 1026029395,
      "node_id": "I_kwDOABKEIs49J_dT",
      "number": 2093,
      "title": "$PSBoundParameters and copies of it get permuted when used by Pester",
      "user": {
        "login": "tbergstedt",
        "id": 5285126,
        "node_id": "MDQ6VXNlcjUyODUxMjY=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5285126?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/tbergstedt",
        "html_url": "https://github.com/tbergstedt",
        "followers_url": "https://api.github.com/users/tbergstedt/followers",
        "following_url": "https://api.github.com/users/tbergstedt/following{/other_user}",
        "gists_url": "https://api.github.com/users/tbergstedt/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/tbergstedt/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/tbergstedt/subscriptions",
        "organizations_url": "https://api.github.com/users/tbergstedt/orgs",
        "repos_url": "https://api.github.com/users/tbergstedt/repos",
        "events_url": "https://api.github.com/users/tbergstedt/events{/privacy}",
        "received_events_url": "https://api.github.com/users/tbergstedt/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-10-14T06:53:38Z",
      "updated_at": "2021-10-14T08:40:49Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "<!-- Thank you for using Pester and taking the time to report this issue!\r\nOnly Pester 4.10.x and 5.x.x are supported, try updating to the latest version to see if that solves your problem. See [Installation and update guide](https://pester.dev/docs/introduction/installation).\r\n\r\n- Please update Pester and retest your code before submitting a bug report. See [Installation and update guide](https://pester.dev/docs/introduction/installation).\r\n- Search for existing issues.\r\n- Pester 5 introduced breaking changes and some features were removed or are not yet migrated. See [Breaking changes](https://github.com/pester/Pester#breaking-changes)\r\n-->\r\n\r\n## General summary of the issue\r\n\r\n\r\n## Describe your environment\r\nPester version     : 5.3.0 C:\\Program Files\\PowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1\r\nPowerShell version : 7.1.4\r\nOS version         : Microsoft Windows NT 10.0.18363.0\r\n\r\n\r\n## Steps to reproduce\r\nI have a set of Pester scripts that I want to be able call all at the same time using a wrapper script. The idea is that the developers should have the possibility to execute them individually, or all in one go. The actual test scripts have a number of in parameters, mutually exclusive via parameters sets that defines how they should be run, so naturally I'd like to use `$PSBoundParameters` within the wrapper script, then setting each Pester run up with a test container.\r\n\r\n### Test script(s), Assert-X.ps1\r\n```powershell\r\n#Assert-1.ps1\r\nparam(\r\n    # Pull Request Id. \r\n    [Parameter(Mandatory,ParameterSetName='ByPullRequestId')]\r\n    [string]$PullRequestId,\r\n\r\n    # Id of Commit(s)\r\n    [Parameter(Mandatory,ParameterSetName='ByCommitId')]\r\n    [string[]]$CommitId,\r\n\r\n    # Switch for including all items in directory search, and not just changed items\r\n    [Parameter(ParameterSetName='ByDirectory')]\r\n    [switch]$Full\r\n)\r\n...\r\n```\r\n### Wrapper script\r\n```powershell\r\n    $scripts = Get-ChildItem \"$PSScriptRoot\\Assert-*.ps1\"\r\n    $testContainer = New-PesterContainer -Path $policyScripts -Data $originalParameters\r\n    $testConfiguration = New-PesterConfiguration @{\r\n        Run = @{\r\n          Container = $testContainer\r\n        }\r\n        Should = @{\r\n            ErrorAction = 'Continue'\r\n        }\r\n    }\r\n    Invoke-Pester -Configuration $testConfiguration\r\n```\r\n\r\n\r\n## Expected Behavior\r\nEach script executes using the same set of parameters and executes. (I'm not sure if the output would be exactly like below since I haven't been able to run them. But I hope you get the idea.\r\n```powershell\r\nStarting discovery in 3 files.\r\nDiscovery found 3 tests in 1.26s.\r\nRunning tests.\r\n[+] C:\\git\\Assert-1.ps1 1.69s (421ms|61ms)\r\n[+] C:\\git\\Assert-2.ps1 1.70s (422ms|62ms)\r\n[+] C:\\git\\Assert-3.ps1 1.71s (423ms|63ms)\r\nTests completed in 1.74s\r\nTests Passed: 9, Failed: 0, Skipped: 0 NotRun: 0\r\n```\r\n\r\n## Current Behavior\r\nAfter only one use of `$PSBoundParameters`, it gets permuted with key-value pairs from the previous run. Even if for example only `-PullRequestId` was given as input the first time, `-CommitId` is included with the in-parameters with a `$null` value, causing the subsequent runs to fail:\r\n```powershell\r\n[-] Discovery in C:\\git\\\\Assert-2.ps1 failed with:\r\n*System.Management.Automation.ParameterBindingValidationException: Cannot bind argument to parameter 'CommitId' because it is null.*\r\nDiscovery found 9 tests in 1.31s.\r\nRunning tests.\r\n[+] C:\\git\\Assert-1.ps1 2.6s (1.28s|106ms)\r\nTests completed in 2.69s\r\nTests Passed: 9, Failed: 0, Skipped: 0 NotRun: 0\r\n*Container failed: 2\r\n  - C:\\git\\Assert-2.ps1\r\n  - C:\\git\\Assert-3.ps1*\r\n```\r\n\r\nI have tried various methods for going around the problem:\r\n```powershell\r\n    # Alternative 1: use psobject.copy()\r\n    $originalParameters = $PSBoundParameters.psobject.Copy()\r\n\r\n    # Alternative 2: Build a parameter set from scratch based on $PSBoundparameters\r\n    $commonParameters = @{}\r\n    $PSBoundParameters.Keys | ForEach-Object {\r\n        $commonParameters.$_ = $PSBoundParameters.$_\r\n    }\r\n```\r\nBut these values get permuted as well.\r\n\r\nTo be fair, I'm not entirely sure this is a problem with Pester, since I'm not that familiar with `$PSBoundParameters`. But I have seen that the permutation only occurs through the use of Pester, any variable created like above _not_ being used in Pester stays unchanged. And it seems to affect _any_ variable used.\r\n\r\n\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2093/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2093/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2092",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2092/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2092/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2092/events",
      "html_url": "https://github.com/pester/Pester/issues/2092",
      "id": 1025255159,
      "node_id": "I_kwDOABKEIs49HCb3",
      "number": 2092,
      "title": "Test fails when no breakpoint is set, test passes with a breakpoint set",
      "user": {
        "login": "DarkLite1",
        "id": 10828570,
        "node_id": "MDQ6VXNlcjEwODI4NTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/10828570?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DarkLite1",
        "html_url": "https://github.com/DarkLite1",
        "followers_url": "https://api.github.com/users/DarkLite1/followers",
        "following_url": "https://api.github.com/users/DarkLite1/following{/other_user}",
        "gists_url": "https://api.github.com/users/DarkLite1/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/DarkLite1/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/DarkLite1/subscriptions",
        "organizations_url": "https://api.github.com/users/DarkLite1/orgs",
        "repos_url": "https://api.github.com/users/DarkLite1/repos",
        "events_url": "https://api.github.com/users/DarkLite1/events{/privacy}",
        "received_events_url": "https://api.github.com/users/DarkLite1/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 13,
      "created_at": "2021-10-13T13:29:39Z",
      "updated_at": "2021-11-22T06:53:50Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "## General summary of the issue\r\nThis is a bit of strange bug but it is consistent. When we run `Invoke-Pester` from the command line in  a new PowerShell terminal the test fails. However, when we place a breakpoint within vscode and run the test then with `F5` or `Invoke-Pester` the test passes.\r\n\r\n## Describe your environment\r\n```\r\nPester version     : 5.3.1 C:\\Program Files\\WindowsPowerShell\\Modules\\Pester\\5.3.1\\Pester.psm1\r\nPowerShell version : 5.1.14393.4583\r\nOS version         : Microsoft Windows NT 10.0.14393.0\r\n```\r\n\r\nVS Code:\r\n```\r\nVersion: 1.61.0 (system setup)\r\nCommit: ee8c7def80afc00dd6e593ef12f37756d8f504ea\r\nDate: 2021-10-07T18:13:09.652Z\r\nElectron: 13.5.1\r\nChrome: 91.0.4472.164\r\nNode.js: 14.16.0\r\nV8: 9.1.269.39-electron.0\r\nOS: Windows_NT x64 10.0.14393\r\n```\r\n## Steps to reproduce\r\n1. Clone the module and its test file from [GitHub](https://github.com/DarkLite1/pester-test-module)\r\n2. In VS Code right click the folder with the script files an choose `Open in Integrated Terminal`\r\n3. Run `Invoke-Pester` and see the test fail:\r\n![image](https://user-images.githubusercontent.com/10828570/137141420-be8c2a6a-a148-471c-ae52-092493345dab.png)\r\n4. Place a breakpoint in the file `Toolbox.PermissionMatrix.Tests.ps1` within the `It` clause and press `F5` to start the tests\r\n5. Notice the test is now successful:\r\n![image](https://user-images.githubusercontent.com/10828570/137141713-e3833bea-3ec7-459c-a206-c7be640d4ea5.png)\r\n\r\nSide issue: the prompt is not correct and says `PS>` as visible in the screenshot. Hitting enter after the incorrect prompt does bring us back to the correct one:\r\n![image](https://user-images.githubusercontent.com/10828570/137141889-7e168717-aac9-44da-a1d1-448608eba8d2.png)\r\n\r\n## Expected Behavior\r\nWe expect the test to always pass or always fail, with or without breakpoints set.\r\n\r\n## Current Behavior\r\nThe test fails when not using a breakpoint for the editor to stop. When there is a breakpoint set, and VS Code stops at the breakpoint, the test is always successful. \r\n\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2092/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2092/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2083",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2083/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2083/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2083/events",
      "html_url": "https://github.com/pester/Pester/issues/2083",
      "id": 998397477,
      "node_id": "I_kwDOABKEIs47glYl",
      "number": 2083,
      "title": "Error after successful Pester run in teardown",
      "user": {
        "login": "efie45",
        "id": 7290972,
        "node_id": "MDQ6VXNlcjcyOTA5NzI=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7290972?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/efie45",
        "html_url": "https://github.com/efie45",
        "followers_url": "https://api.github.com/users/efie45/followers",
        "following_url": "https://api.github.com/users/efie45/following{/other_user}",
        "gists_url": "https://api.github.com/users/efie45/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/efie45/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/efie45/subscriptions",
        "organizations_url": "https://api.github.com/users/efie45/orgs",
        "repos_url": "https://api.github.com/users/efie45/repos",
        "events_url": "https://api.github.com/users/efie45/events{/privacy}",
        "received_events_url": "https://api.github.com/users/efie45/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 6,
      "created_at": "2021-09-16T16:20:02Z",
      "updated_at": "2021-09-24T12:21:40Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "## Question\r\nI'm getting the following error after a 'successful' run of my pester tests. I can trace everything through the last AfterAll  and I am getting the expected results inside my scripts. However, after the final AfterAll closing bracket if I \"step-into\" with the debugger I am dropped into Pester.psm1 and end up walking through the teardown until I get this error:\r\n\r\n```\r\n  Modules/Pester/5.3.0/Pester.psm1:1208:17\r\nLine | 1208 \r\n     |                  $Test.ErrorRecord.AddRange($result.ErrorRecord)\r\n     |                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Exception calling \"AddRange\" with \"1\" argument(s): \"Value cannot be null.\r\n     | (Parameter 'collection')\"\r\n```\r\nIf I break on line 1208 inside the Pester teardown I see these two lines of code, which is where the error occurs:\r\n\r\n```powershell\r\n                $Test.StandardOutput = $result.StandardOutput\r\n                $Test.ErrorRecord.AddRange($result.ErrorRecord)\r\n```\r\n\r\nThe variable ```$Test``` shows that the test passed and there are no errors:\r\n\r\n```\r\n> $Test\r\nResult            : \r\nErrorRecord       : {}\r\nStandardOutput    : \r\nDuration          : 00:00:00\r\nItemType          : Test\r\nId                : \r\n...\r\nTag               : \r\nFocus             : False\r\nSkip              : False\r\nBlock             : [ ] Block\r\nFirst             : True\r\nLast              : True\r\nInclude           : False\r\nExclude           : False\r\nExplicit          : True\r\nShouldRun         : True\r\nStartLine         : 44\r\nExecuted          : True\r\nExecutedAt        : 9/16/2021 11:12:54 AM\r\nPassed            : True\r\nSkipped           : False\r\nUserDuration      : 00:00:00\r\nFrameworkDuration : 00:00:00\r\nPluginData        : {Mock}\r\nFrameworkData     : {Runtime}\r\n```\r\n\r\nAnd the ```$result``` variable shows that the run was also successful:\r\n\r\n```\r\n> $result\r\n\r\nTrue\r\nTrue\r\n\r\nSuccess ErrorRecord StandardOutput\r\n------- ----------- --------------\r\n   True {}     \r\n```\r\n\r\nCan someone please help me figure out what's going on here? I'm at my absolute wits end and have been trying to figure this out for a couple of days now. \r\n\r\n**Environment data**\r\nPester version     : 5.3.0 /Users/USER/.local/share/powershell/Modules/Pester/5.3.0/Pester.psm1PowerShell version : 7.1.3                                                                         OS version         : Unix 11.0.0\r\n\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2083/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2083/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2080",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2080/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2080/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2080/events",
      "html_url": "https://github.com/pester/Pester/issues/2080",
      "id": 994135682,
      "node_id": "MDU6SXNzdWU5OTQxMzU2ODI=",
      "number": 2080,
      "title": "Fix coverage in loops",
      "user": {
        "login": "nohwnd",
        "id": 5735905,
        "node_id": "MDQ6VXNlcjU3MzU5MDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5735905?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nohwnd",
        "html_url": "https://github.com/nohwnd",
        "followers_url": "https://api.github.com/users/nohwnd/followers",
        "following_url": "https://api.github.com/users/nohwnd/following{/other_user}",
        "gists_url": "https://api.github.com/users/nohwnd/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nohwnd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nohwnd/subscriptions",
        "organizations_url": "https://api.github.com/users/nohwnd/orgs",
        "repos_url": "https://api.github.com/users/nohwnd/repos",
        "events_url": "https://api.github.com/users/nohwnd/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nohwnd/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-09-12T11:40:04Z",
      "updated_at": "2021-09-12T11:40:04Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "body": "Indeed, the new Profiler is much faster than the breakpoint method. Our unit tests now run in about 10 minutes versus 17 minutes. However, I am seeing a few differences in coverage between the two methods. After processing the coverage file with Report Generator, I observe the following discrepency (on the left is the coverage using the Profiler while on the right is the coverage using Breakpoints):\r\n\r\n![image](https://user-images.githubusercontent.com/61014947/131678129-aaff3b3a-0ad4-440b-bf03-27e0737b1aa4.png)\r\n\r\nWhat the profiler is reporting for these lines doesn't make much sense.\r\n\r\n_Originally posted by @fred-gagnon in https://github.com/pester/Pester/discussions/2052#discussioncomment-1265207_",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2080/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2080/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2076",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2076/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2076/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2076/events",
      "html_url": "https://github.com/pester/Pester/issues/2076",
      "id": 989581794,
      "node_id": "MDU6SXNzdWU5ODk1ODE3OTQ=",
      "number": 2076,
      "title": "Set-Location $null run slowly and High CPU usage ",
      "user": {
        "login": "Andy-AO",
        "id": 38101170,
        "node_id": "MDQ6VXNlcjM4MTAxMTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/38101170?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Andy-AO",
        "html_url": "https://github.com/Andy-AO",
        "followers_url": "https://api.github.com/users/Andy-AO/followers",
        "following_url": "https://api.github.com/users/Andy-AO/following{/other_user}",
        "gists_url": "https://api.github.com/users/Andy-AO/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Andy-AO/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Andy-AO/subscriptions",
        "organizations_url": "https://api.github.com/users/Andy-AO/orgs",
        "repos_url": "https://api.github.com/users/Andy-AO/repos",
        "events_url": "https://api.github.com/users/Andy-AO/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Andy-AO/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 8,
      "created_at": "2021-09-07T04:29:06Z",
      "updated_at": "2021-09-08T21:19:15Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "`Describe 'root' {it 'test' {Set-Location $null}}`\r\n\r\nRun this script and wait for the execution to complete. Running this script again should also return the test results immediately, but the actual situation is that PowerShell will not be able to interact, and the CPU utilization begins to rise abnormally. Wait a few minutes before you can receive the return value, and may be accompanied by an error message.The same conclusion can be reached by testing in new virtual machines.\r\n```PowerShell\r\nGet-ChildItem: C:\\Users\\Andy\\Documents\\PowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1:3512\r\nLine |\r\n3512 |              & $SafeCommands['Get-ChildItem'] -Recurse -Path $p -Filte …\r\n     |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Could not find a part of the path 'C:\\Users\\Andy\\Documents\\Tencent\r\n     | Files\\11681258\\FileRecv'.\r\n```\r\n\r\n```PowerShell\r\nPester version     : 5.3.0 C:\\Users\\Andy\\Documents\\PowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1\r\nPowerShell version : 7.1.3\r\nOS version         : Microsoft Windows NT 10.0.18363.0\r\n```",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2076/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2076/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2074",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2074/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2074/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2074/events",
      "html_url": "https://github.com/pester/Pester/issues/2074",
      "id": 988858974,
      "node_id": "MDU6SXNzdWU5ODg4NTg5NzQ=",
      "number": 2074,
      "title": "If Invoke-Pester is called, the previous Mock will be invalidated",
      "user": {
        "login": "Andy-AO",
        "id": 38101170,
        "node_id": "MDQ6VXNlcjM4MTAxMTcw",
        "avatar_url": "https://avatars.githubusercontent.com/u/38101170?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Andy-AO",
        "html_url": "https://github.com/Andy-AO",
        "followers_url": "https://api.github.com/users/Andy-AO/followers",
        "following_url": "https://api.github.com/users/Andy-AO/following{/other_user}",
        "gists_url": "https://api.github.com/users/Andy-AO/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/Andy-AO/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/Andy-AO/subscriptions",
        "organizations_url": "https://api.github.com/users/Andy-AO/orgs",
        "repos_url": "https://api.github.com/users/Andy-AO/repos",
        "events_url": "https://api.github.com/users/Andy-AO/events{/privacy}",
        "received_events_url": "https://api.github.com/users/Andy-AO/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-09-06T07:19:23Z",
      "updated_at": "2021-09-06T09:35:04Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "If `Invoke-Pester` is called, the previous mocks will be invalidated.\r\nOf course, I know that requirements can be implemented in other ways, and this is just a report.\r\n\r\nhttps://github.com/Andy-AO/Shared/tree/master/PesterMockBug\r\n\r\n```OutPut\r\nPester version     : 5.1.1 C:\\Users\\Andy\\Documents\\PowerShell\\Modules\\Pester\\5.1.1\\Pester.psm1\r\nPowerShell version : 7.1.3\r\nOS version         : Microsoft Windows NT 10.0.18363.0\r\n```",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2074/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2074/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2073",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2073/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2073/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2073/events",
      "html_url": "https://github.com/pester/Pester/issues/2073",
      "id": 988558660,
      "node_id": "MDU6SXNzdWU5ODg1NTg2NjA=",
      "number": 2073,
      "title": "Using same data with two or more containers fail",
      "user": {
        "login": "johlju",
        "id": 7189721,
        "node_id": "MDQ6VXNlcjcxODk3MjE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7189721?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/johlju",
        "html_url": "https://github.com/johlju",
        "followers_url": "https://api.github.com/users/johlju/followers",
        "following_url": "https://api.github.com/users/johlju/following{/other_user}",
        "gists_url": "https://api.github.com/users/johlju/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/johlju/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/johlju/subscriptions",
        "organizations_url": "https://api.github.com/users/johlju/orgs",
        "repos_url": "https://api.github.com/users/johlju/repos",
        "events_url": "https://api.github.com/users/johlju/events{/privacy}",
        "received_events_url": "https://api.github.com/users/johlju/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": {
        "login": "nohwnd",
        "id": 5735905,
        "node_id": "MDQ6VXNlcjU3MzU5MDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5735905?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nohwnd",
        "html_url": "https://github.com/nohwnd",
        "followers_url": "https://api.github.com/users/nohwnd/followers",
        "following_url": "https://api.github.com/users/nohwnd/following{/other_user}",
        "gists_url": "https://api.github.com/users/nohwnd/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nohwnd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nohwnd/subscriptions",
        "organizations_url": "https://api.github.com/users/nohwnd/orgs",
        "repos_url": "https://api.github.com/users/nohwnd/repos",
        "events_url": "https://api.github.com/users/nohwnd/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nohwnd/received_events",
        "type": "User",
        "site_admin": false
      },
      "assignees": [
        {
          "login": "nohwnd",
          "id": 5735905,
          "node_id": "MDQ6VXNlcjU3MzU5MDU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5735905?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/nohwnd",
          "html_url": "https://github.com/nohwnd",
          "followers_url": "https://api.github.com/users/nohwnd/followers",
          "following_url": "https://api.github.com/users/nohwnd/following{/other_user}",
          "gists_url": "https://api.github.com/users/nohwnd/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/nohwnd/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/nohwnd/subscriptions",
          "organizations_url": "https://api.github.com/users/nohwnd/orgs",
          "repos_url": "https://api.github.com/users/nohwnd/repos",
          "events_url": "https://api.github.com/users/nohwnd/events{/privacy}",
          "received_events_url": "https://api.github.com/users/nohwnd/received_events",
          "type": "User",
          "site_admin": false
        }
      ],
      "milestone": {
        "url": "https://api.github.com/repos/pester/Pester/milestones/27",
        "html_url": "https://github.com/pester/Pester/milestone/27",
        "labels_url": "https://api.github.com/repos/pester/Pester/milestones/27/labels",
        "id": 6855357,
        "node_id": "MDk6TWlsZXN0b25lNjg1NTM1Nw==",
        "number": 27,
        "title": "5.4",
        "description": null,
        "creator": {
          "login": "nohwnd",
          "id": 5735905,
          "node_id": "MDQ6VXNlcjU3MzU5MDU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5735905?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/nohwnd",
          "html_url": "https://github.com/nohwnd",
          "followers_url": "https://api.github.com/users/nohwnd/followers",
          "following_url": "https://api.github.com/users/nohwnd/following{/other_user}",
          "gists_url": "https://api.github.com/users/nohwnd/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/nohwnd/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/nohwnd/subscriptions",
          "organizations_url": "https://api.github.com/users/nohwnd/orgs",
          "repos_url": "https://api.github.com/users/nohwnd/repos",
          "events_url": "https://api.github.com/users/nohwnd/events{/privacy}",
          "received_events_url": "https://api.github.com/users/nohwnd/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 9,
        "closed_issues": 0,
        "state": "open",
        "created_at": "2021-06-15T08:16:42Z",
        "updated_at": "2021-11-22T06:27:09Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 3,
      "created_at": "2021-09-05T17:29:25Z",
      "updated_at": "2021-09-13T07:10:11Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "## General summary of the issue\r\n\r\nUsing the same data hashtable for tests script files that contains parameters, and is using a parameter with `[Parameter(ValueFromRemainingArguments = $true)]`, fails.\r\n\r\nThis might have been introduced in Pester v5.3.0 because we are seeing this in the pipeline today, and have not seen it before.\r\nI wondering if this is a bug in Pester (or can be fixed in Pester), or if this is by design, then I must use the workaround (see possible solution below) in our pipeline.\r\n\r\nThe error is thrown here:\r\n\r\nhttps://github.com/pester/Pester/blob/a5bdc2f19cca5a955db2646c49953f5ce7e6c854/src/Pester.Runtime.ps1#L2479\r\n\r\n## Describe your environment\r\n```\r\nPester version     : 5.3.0 C:\\source\\SqlServerDsc\\output\\RequiredModules\\Pester\\5.3.0\\Pester.psm1\r\nPowerShell version : 7.1.4\r\nOS version         : Microsoft Windows NT 10.0.19043.0\r\n```\r\n\r\n\r\n## Steps to reproduce\r\n\r\n### 1. Create test script file\r\n\r\nSave the test script file `ScriptParameterIssue.Tests.ps1`:\r\n\r\n```powershell\r\nparam\r\n(\r\n    $Param1,\r\n    $Param2,\r\n\r\n    [Parameter(ValueFromRemainingArguments = $true)]\r\n    $Args\r\n)\r\n\r\nDescribe 'Test script parameter' {\r\n    It 'Should do something' {\r\n        $true | Should -BeTrue\r\n    }\r\n}\r\n```\r\n### 2. Run the test script\r\n\r\nRun the following code, it will throw an error:\r\n\r\n```powershell\r\n$pesterData = @{\r\n    Param1        = '1'\r\n    Param2        = '2'\r\n    Param3        = '3'\r\n}\r\n\r\n$pesterConfiguration = [PesterConfiguration]::Default\r\n$pesterConfiguration.Run.Container = @(\r\n    New-PesterContainer -Path ScriptParameterIssue.Tests.ps1 -Data $pesterData\r\n    New-PesterContainer -Path ScriptParameterIssue.Tests.ps1 -Data $pesterData\r\n)\r\n\r\nInvoke-Pester -Configuration $pesterConfiguration\r\n\r\n$pesterConfiguration.Run.Container.Value[0].Data\r\n\r\n```\r\n\r\n## Expected Behavior\r\nShould not throw an error.\r\n\r\n## Current Behavior\r\nThrows an error saying:\r\n\r\n```plaintext\r\n[-] Discovery in C:\\source\\SqlServerDsc\\ScriptParameterIssue.Tests.ps1 failed with:\r\nSystem.Management.Automation.ParameterBindingException: A parameter cannot be found that matches parameter name 'Param3'\r\n```\r\n\r\n## Possible Solution? (optional)\r\n\r\nThe problem seems to be that Pester is changing the content of the container data hashtable, adding a new property `Args`, when discovery run on the first test. Then the second script file gets the wrong data since the data property for all containers point to the same hashtable.\r\n\r\nA workaround is to make sure to clone the hashtable containing the data when passing it to `New-PesterContainer`.\r\n\r\n```powershell\r\n$pesterConfiguration.Run.Container = @(\r\n    New-PesterContainer -Path ScriptParameterIssue.Tests.ps1 -Data $pesterData.Clone()\r\n    New-PesterContainer -Path ScriptParameterIssue.Tests.ps1 -Data $pesterData.Clone()\r\n)\r\n```",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2073/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2073/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2071",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2071/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2071/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2071/events",
      "html_url": "https://github.com/pester/Pester/issues/2071",
      "id": 985184913,
      "node_id": "MDU6SXNzdWU5ODUxODQ5MTM=",
      "number": 2071,
      "title": "Allow Data driven test template parameters to be be passed into a Mock",
      "user": {
        "login": "plastikfan",
        "id": 49785914,
        "node_id": "MDQ6VXNlcjQ5Nzg1OTE0",
        "avatar_url": "https://avatars.githubusercontent.com/u/49785914?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/plastikfan",
        "html_url": "https://github.com/plastikfan",
        "followers_url": "https://api.github.com/users/plastikfan/followers",
        "following_url": "https://api.github.com/users/plastikfan/following{/other_user}",
        "gists_url": "https://api.github.com/users/plastikfan/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/plastikfan/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/plastikfan/subscriptions",
        "organizations_url": "https://api.github.com/users/plastikfan/orgs",
        "repos_url": "https://api.github.com/users/plastikfan/repos",
        "events_url": "https://api.github.com/users/plastikfan/events{/privacy}",
        "received_events_url": "https://api.github.com/users/plastikfan/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 201863597,
          "node_id": "MDU6TGFiZWwyMDE4NjM1OTc=",
          "url": "https://api.github.com/repos/pester/Pester/labels/Feature",
          "name": "Feature",
          "color": "207de5",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 11,
      "created_at": "2021-09-01T13:55:17Z",
      "updated_at": "2021-12-15T21:55:39Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "<!-- Thank you for using Pester!\r\nGood ideas are always welcome and there's no commitment to implement it yourself, but feel free to contribute after an initial discussion.\r\n\r\n- Try out the latest version of Pester - maybe your request is already available. See [Installation and update guide](https://pester.dev/docs/introduction/installation).\r\n- See [README](https://github.com/pester/Pester) for the latest updates and newest features.\r\n- Search for existing issues to matches your idea. A popular issue/request is more likely to be prioritized.\r\n-->\r\n\r\n## Summary of the feature request\r\nCurrently, when a suite of data driven tests is defined with the -TestCases option, the defined template parameters are not currently available to use inside a Mock. Here is an example:\r\n\r\n```powershell\r\nDescribe 'Initialize-ShellOperant' {\r\n  BeforeAll {\r\n    InModuleScope -ModuleName Elizium.Loopz {\r\n      Get-Module Elizium.Loopz | Remove-Module -Force; ;\r\n      Import-Module .\\Output\\Elizium.Loopz\\Elizium.Loopz.psm1 `\r\n        -ErrorAction 'stop' -DisableNameChecking -Force;\r\n    }\r\n    [string]$script:_HomePath = $(Join-Path -Path $TestDrive -ChildPath 'username');\r\n    [string]$script:_EliziumPath = $(Join-Path -Path $_HomePath -ChildPath 'elizium');\r\n  }\r\n\r\n  Context 'given: <UndoRenameDisabled>, <EliziumPath>' {\r\n    It 'should: ' -Tag 'Current' -TestCases @(\r\n      , @{ UndoRenameDisabled = $false; EliziumPath = $_EliziumPath; }\r\n    ) {\r\n      Mock -ModuleName Elizium.Loopz Get-EnvironmentVariable {\r\n        param(\r\n          [Parameter()]\r\n          [string]$Variable\r\n        )\r\n        $result = switch ($Variable) {\r\n          'LOOPZ_UNDO_RENAME' {\r\n            $UndoRenameDisabled;\r\n            break;\r\n          }\r\n\r\n          'ELIZIUM_PATH' {\r\n            $EliziumPath;\r\n            break;\r\n          }\r\n\r\n          'HOME' {\r\n            $HomePath;\r\n            break;\r\n          }\r\n        }\r\n\r\n        return $result;\r\n      }\r\n    }\r\n  }\r\n```\r\nSo we have 2 template variables __UndoRenameDisabled__ and __EliziumPath__. These variables are accessible from the test code directly inside the It block. However, they are not bound inside the _Get-EnvironmentVariable_ Mock. So in this example, __$UndoRenameDisabled__ and __$EliziumPath__ referenced inside the switch statement are not bound in.\r\n\r\nThe only way to get aound this issue is to artifically run inside module scope, because the InModuleScope function has a ___Parameters___ param. It would be great if there was a ___Parameters___ param on Mock in the same way, so we don't have to run InModuleScope just so we can access template parameters.\r\n\r\n## How should it work? (optional)\r\nShould be implemented in the same way as #1957 \r\n",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2071/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2071/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2067",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2067/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2067/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2067/events",
      "html_url": "https://github.com/pester/Pester/issues/2067",
      "id": 983664315,
      "node_id": "MDU6SXNzdWU5ODM2NjQzMTU=",
      "number": 2067,
      "title": "\"New-MockObject\" adding multiple methods - leads to error!?",
      "user": {
        "login": "nohwnd",
        "id": 5735905,
        "node_id": "MDQ6VXNlcjU3MzU5MDU=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5735905?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/nohwnd",
        "html_url": "https://github.com/nohwnd",
        "followers_url": "https://api.github.com/users/nohwnd/followers",
        "following_url": "https://api.github.com/users/nohwnd/following{/other_user}",
        "gists_url": "https://api.github.com/users/nohwnd/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/nohwnd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/nohwnd/subscriptions",
        "organizations_url": "https://api.github.com/users/nohwnd/orgs",
        "repos_url": "https://api.github.com/users/nohwnd/repos",
        "events_url": "https://api.github.com/users/nohwnd/events{/privacy}",
        "received_events_url": "https://api.github.com/users/nohwnd/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-08-31T09:49:34Z",
      "updated_at": "2021-08-31T09:49:34Z",
      "closed_at": null,
      "author_association": "MEMBER",
      "active_lock_reason": null,
      "body": "### Discussed in https://github.com/pester/Pester/discussions/2066\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **TRUMPF-TobiH** August 30, 2021</sup>\r\nHello Together,\r\nsorry if the question is stupid, I am still new to Pester.\r\nI am trying to mock an object with multiple methods, which results in an error.\r\nHere is the code snippet directly from powershell:\r\n```powershell\r\n$test = New-MockObject -Type 'Net.Sockets.TcpClient' -Methods  @{\r\n    Connect = { param($Server, $Port)\"connect\" };\r\n    Close   = { param($Server, $Port)\"close\" }\r\n}\r\n```\r\nError Message:\r\n```powershell\r\nInvalidOperation: C:\\Program Files\\PowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1:12499:13\r\n Line |\r\n12499 |              $mockState[$historyName] = @{\r\n      |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n      | Unable to index into an object of type \"System.Management.Automation.PSNoteProperty\".\r\n```\r\n\r\nWorks fine with single method:\r\n```powershell\r\n$test = New-MockObject -Type 'Net.Sockets.TcpClient' -Methods  @{\r\n    Connect = { param($Server, $Port)\"connect\" }\r\n}\r\n```\r\n\r\nAlso fine with multiple properties:\r\n```powershell\r\n$test = New-MockObject -Type 'Net.Sockets.TcpClient' -Properties  @{\r\n    Connect = \"connect\" ;\r\n    Close   = \"close\"\r\n}\r\n```\r\nUsing Pester Version 5.3.0 from psgallery on Windows Powershell Core 7.1.4\r\n\r\nThanks already for feedback</div>",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2067/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2067/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2064",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2064/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2064/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2064/events",
      "html_url": "https://github.com/pester/Pester/issues/2064",
      "id": 977035063,
      "node_id": "MDU6SXNzdWU5NzcwMzUwNjM=",
      "number": 2064,
      "title": "Enhance `Should -Throw` Documentation with Error Scenario",
      "user": {
        "login": "aolszowka",
        "id": 2592881,
        "node_id": "MDQ6VXNlcjI1OTI4ODE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2592881?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/aolszowka",
        "html_url": "https://github.com/aolszowka",
        "followers_url": "https://api.github.com/users/aolszowka/followers",
        "following_url": "https://api.github.com/users/aolszowka/following{/other_user}",
        "gists_url": "https://api.github.com/users/aolszowka/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/aolszowka/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/aolszowka/subscriptions",
        "organizations_url": "https://api.github.com/users/aolszowka/orgs",
        "repos_url": "https://api.github.com/users/aolszowka/repos",
        "events_url": "https://api.github.com/users/aolszowka/events{/privacy}",
        "received_events_url": "https://api.github.com/users/aolszowka/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 671061704,
          "node_id": "MDU6TGFiZWw2NzEwNjE3MDQ=",
          "url": "https://api.github.com/repos/pester/Pester/labels/Documentation",
          "name": "Documentation",
          "color": "c5def5",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-08-23T13:25:28Z",
      "updated_at": "2021-08-23T13:26:23Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "## Location\r\nhttps://pester.dev/docs/v4/usage/assertions#throw\r\n\r\n- Pester version: v4\r\n- Function: `Should -Throw`\r\n\r\n## General summary of the issue\r\nThe documentation is actually very good for `Should -Throw` however being so new to Pester this threw me for a loop:\r\n\r\n```powershell\r\nfunction Test-It {\r\n    [CmdletBinding()]\r\n    param()\r\n    process {\r\n        try {\r\n            New-PSSession -ComputerName 'badcomputername687894' -ErrorAction:Stop\r\n            Write-Host -Object \"But I continue execution\"\r\n        }\r\n        finally {\r\n            Write-Host -Object \"This is in the finally block\"\r\n        }\r\n    }\r\n}\r\nImport-Module 'Pester'\r\nDescribe 'Pester' {\r\n    # This doesn't work like you think it would\r\n    Context 'Context' {\r\n        # Arrange\r\n        Mock New-PSSession { throw 'New-PSSession Throws'}\r\n        Mock Write-Host { }\r\n        # Act\r\n        Test-It\r\n        # Assert\r\n        It 'Should write just finally' {\r\n            Assert-MockCalled -CommandName Write-Host -Times 1 -Exactly -ExclusiveFilter { $Object -eq \"This is in the finally block\" }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThis returns an error message similar to the following:\r\n\r\n```\r\nDescribing Pester\r\n\r\n  Context Context\r\n    [-] Error occurred in Context block 0ms\r\n      RuntimeException: New-PSSession Throws\r\n      at ExecuteBlock, C:\\Program Files\\WindowsPowerShell\\Modules\\Pester\\4.10.1\\Functions\\Mock.ps1: line 1215\r\n      at Invoke-Mock, C:\\Program Files\\WindowsPowerShell\\Modules\\Pester\\4.10.1\\Functions\\Mock.ps1: line 1025\r\n      at <ScriptBlock><Process>, <No file>: line 172\r\n      at Test-It<Process>, S:\\Git\\OneOffScripts\\Test-It.ps1: line 8\r\n      at <ScriptBlock>, S:\\Git\\OneOffScripts\\Test-It.ps1: line 24\r\n      at DescribeImpl, C:\\Program Files\\WindowsPowerShell\\Modules\\Pester\\4.10.1\\Functions\\Describe.ps1: line 213\r\n```\r\n\r\nThe problem is a misunderstanding on my part that you MUST put any throwing operation in braces: `{ }` this is actually called out in this StackOverflow post from @markwragg https://stackoverflow.com/a/45574334/433069\r\n\r\nThe following works:\r\n\r\n```powershell\r\nImport-Module 'Pester'\r\nDescribe 'Pester' {\r\n    Context 'Context' {\r\n        # Arrange\r\n        Mock New-PSSession { throw 'New-PSSession Throws'}\r\n        Mock Write-Host { }\r\n        # Act/Assert\r\n        It 'Should write just finally' {\r\n            { Test-It -ErrorAction:Stop } | Should -Throw -ExpectedMessage 'New-PSSession Throws'\r\n            Assert-MockCalled -CommandName Write-Host -Times 1 -Exactly -ExclusiveFilter { $Object -eq \"This is in the finally block\" }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nI am not sure how best the documentation could be improved, I think perhaps having the error message that occurs if you do it \"wrong\" might be helpful. In some ways the documentation tries to call this out with this blurb: `Warning: The input object must be a ScriptBlock, otherwise it is processed outside of the assertion.` The hope is that someone else encountering this will run across this issue eventually.",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2064/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2064/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2062",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2062/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2062/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2062/events",
      "html_url": "https://github.com/pester/Pester/issues/2062",
      "id": 976206883,
      "node_id": "MDU6SXNzdWU5NzYyMDY4ODM=",
      "number": 2062,
      "title": "Disable verbosity exception output for failed tests",
      "user": {
        "login": "sergey-s-betke",
        "id": 2465807,
        "node_id": "MDQ6VXNlcjI0NjU4MDc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2465807?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sergey-s-betke",
        "html_url": "https://github.com/sergey-s-betke",
        "followers_url": "https://api.github.com/users/sergey-s-betke/followers",
        "following_url": "https://api.github.com/users/sergey-s-betke/following{/other_user}",
        "gists_url": "https://api.github.com/users/sergey-s-betke/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sergey-s-betke/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sergey-s-betke/subscriptions",
        "organizations_url": "https://api.github.com/users/sergey-s-betke/orgs",
        "repos_url": "https://api.github.com/users/sergey-s-betke/repos",
        "events_url": "https://api.github.com/users/sergey-s-betke/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sergey-s-betke/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 4,
      "created_at": "2021-08-21T19:36:26Z",
      "updated_at": "2021-08-22T17:45:11Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "## General summary of the issue\r\n\r\nPlease, disable verbosity exception output (execution stack trace) for failed tests (https://github.com/pester/vscode-adapter/discussions/51). \r\n\r\n## Describe your environment\r\n\r\nPester version     : 5.3.0 C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1\r\nPowerShell version : 5.1.15063.674\r\nOS version         : Microsoft Windows NT 10.0.15063.0\r\n\r\n## Steps to reproduce\r\n\r\nTest file:\r\n\r\n````powershell\r\n#Requires -Version 5.0\r\n#Requires -Modules @{ ModuleName='Pester'; ModuleVersion='5.2.0' }\r\n\r\nparam(\r\n\t# путь к папке с генерируемыми файлами\r\n\t[System.String]\r\n\t$DestinationPath = ( Join-Path -Path ( ( Get-Location ).Path ) -ChildPath 'output' ),\r\n\r\n\t# путь к папке с .odt файлами\r\n\t[System.String]\r\n\t$DestinationDocumentsPath = ( Join-Path -Path $DestinationPath -ChildPath 'doc' ),\r\n\r\n\t# имя .odt шаблона\r\n\t[System.String]\r\n\t$DocumentsFilter = '*.odt',\r\n\r\n\t# пути к .odt файлам\r\n\t[System.String[]]\r\n\t$DestinationDocFile = @(\r\n\t\t$DestinationDocumentsPath | Where-Object { Test-Path -Path $_ } |\r\n\t\tGet-ChildItem -Filter $DocumentsFilter | Select-Object -ExpandProperty FullName\r\n\t),\r\n\r\n\t# путь к папке с инструментами для сборки\r\n\t[System.String]\r\n\t$ToolsPath = ( ( Resolve-Path -Path '.\\tools' ).Path ),\r\n\r\n\t# путь к папке с инструментами для документов\r\n\t[System.String]\r\n\t$DocsToolsPath = ( Join-Path -Path $ToolsPath -ChildPath 'docs' ),\r\n\r\n\t[System.String]\r\n\t$ODFValidatorPath = ( Join-Path -Path $DocsToolsPath -ChildPath 'ODFValidator' ),\r\n\r\n\t# путь к ODF validator JAR файлу\r\n\t[System.String]\r\n\t$ODFValidatorJarPath = ( Join-Path -Path $ODFValidatorPath -ChildPath 'ODFValidator.jar' )\r\n)\r\n\r\nchcp 65001 > $null;\r\n\r\nDescribe 'Open Documents' {\r\n\tDescribe '<Name>' -ForEach @(\r\n\t\t$DestinationDocFile | Get-Item |\r\n\t\tForEach-Object { @{ Name = $_.Name; FullName = $_.FullName } }\r\n\t) {\r\n\t\tIt 'is valid (by ODFValidator)' -Tag 'ODFValidator' {\r\n\t\t\t# chcp 866 > $null;\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tjava -D\"file.encoding=UTF-8\" -jar $ODFValidatorJarPath -e -w $FullName\r\n\t\t\t}\r\n\t\t\tfinally\r\n\t\t\t{\r\n\t\t\t\t# chcp 65001 > $null;\r\n\t\t\t}\r\n\t\t\t$LASTEXITCODE | Should -Be 0;\r\n\t\t}\r\n\t}\r\n}\r\n````\r\n\r\n## Expected Behavior\r\n\r\nDesired output:\r\n\r\n````\r\n> Executing task: Invoke-Pester -Configuration ( Import-PowerShellDataFile -LiteralPath '.\\tests\\pester-config.psd1' ) <\r\n\r\nPester v5.3.0\r\n\r\nStarting discovery in 2 files.\r\nDiscovery found 14 tests in 1.19s.\r\nRunning tests.\r\n\r\nRunning tests from 'Documents.Tests.ps1'\r\nDescribing Open Documents\r\n Describing Доверенность.odt\r\n   [+] is valid (by ODFValidator) 2.46s (2.35s|106ms)\r\n Describing Должностная инструкция.odt\r\n   [+] is valid (by ODFValidator) 2s (2s|4ms)\r\n Describing Письмо о коммерческом предложении на работы (ОЕИ).odt\r\nC:\\Users\\sergei.s.betke\\Documents\\DocTemplates\\output\\doc\\Письмо о коммерческом предложении на работы (ОЕИ).odt/content.xml[3,54]:  Error: element \"text:a\" is missing \"type\" attribute\r\nxt:a xlink:href=\"tel:+7-8162-60-77-47\"><!-- http://tools.ietf.org/html/rfc3966\r\n                                 ----^\r\n   [-] is valid (by ODFValidator) 2.21s (2.2s|14ms)\r\n    at $LASTEXITCODE | Should -Be 0;, C:\\Users\\sergei.s.betke\\Documents\\DocTemplates\\tests\\doc\\Documents.Tests.ps1:57\r\n    Expected 0, but got 1.\r\n Describing Письмо сопроводительное к актам сверки.odt\r\n   [+] is valid (by ODFValidator) 1.97s (1.97s|5ms)\r\n Describing Письмо сопроводительное.odt\r\n   [+] is valid (by ODFValidator) 1.97s (1.96s|11ms)\r\n Describing Письмо.odt\r\n   [+] is valid (by ODFValidator) 2.1s (2.09s|7ms)\r\n Describing Положение о подразделении.odt\r\n   [+] is valid (by ODFValidator) 2.07s (2.06s|9ms)\r\n Describing Приказ.odt\r\n   [+] is valid (by ODFValidator) 1.95s (1.95s|6ms)\r\n Describing Профессиональная инструкция.odt\r\n   [+] is valid (by ODFValidator) 1.93s (1.93s|3ms)\r\n Describing Распоряжение (приказ) о введении в действие документа СМ.odt\r\n   [+] is valid (by ODFValidator) 1.98s (1.97s|5ms)\r\n Describing Распоряжение.odt\r\n   [+] is valid (by ODFValidator) 1.97s (1.97s|3ms)\r\n Describing Служебная записка.odt\r\n   [+] is valid (by ODFValidator) 1.97s (1.97s|4ms)\r\n Describing Справка.odt\r\n   [+] is valid (by ODFValidator) 1.95s (1.94s|3ms)\r\n\r\nRunning tests from 'Templates.Tests.ps1'\r\nDescribing Open Document templates\r\n Describing ОРД ФБУ Тест-С.-Петербург v2.ott\r\n   [+] is valid (by ODFValidator) 2.14s (2.13s|17ms)\r\nTests completed in 32.01s\r\nTests Passed: 13, Failed: 1, Skipped: 0 NotRun: 0\r\nПроцесс терминала \"powershell.exe -NoProfile -ExecutionPolicy Bypass -Command Invoke-Pester -Configuration ( Import-PowerShellDataFile -LiteralPath '.\\tests\\pester-config.psd1' )\" был завершен с кодом выхода 1.\r\n````\r\n\r\n## Current Behavior\r\n\r\nOutput:\r\n\r\n````\r\nStarting discovery in 2 files.\r\nDiscovery found 14 tests in 1.19s.\r\nRunning tests.\r\n\r\nRunning tests from 'Documents.Tests.ps1'\r\nDescribing Open Documents\r\n Describing Доверенность.odt\r\n   [+] is valid (by ODFValidator) 2.46s (2.35s|106ms)\r\n Describing Должностная инструкция.odt\r\n   [+] is valid (by ODFValidator) 2s (2s|4ms)\r\n Describing Письмо о коммерческом предложении на работы (ОЕИ).odt\r\nC:\\Users\\sergei.s.betke\\Documents\\DocTemplates\\output\\doc\\Письмо о коммерческом предложении на работы (ОЕИ).odt/content.xml[3,54]:  Error: element \"text:a\" is missing \"type\" attribute\r\nxt:a xlink:href=\"tel:+7-8162-60-77-47\"><!-- http://tools.ietf.org/html/rfc3966\r\n                                 ----^\r\n   [-] is valid (by ODFValidator) 2.21s (2.2s|14ms)\r\n    at $LASTEXITCODE | Should -Be 0;, C:\\Users\\sergei.s.betke\\Documents\\DocTemplates\\tests\\doc\\Documents.Tests.ps1:57\r\n    в Invoke-Assertion, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 8078\r\n    в Should<End>, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 8016\r\n    в <ScriptBlock>, C:\\Users\\sergei.s.betke\\Documents\\DocTemplates\\tests\\doc\\Documents.Tests.ps1: строка 57\r\n    в <ScriptBlock>, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 1988\r\n    в <ScriptBlock>, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 1949\r\n    в Invoke-ScriptBlock, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 2110\r\n    в Invoke-TestItem, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 1184\r\n    в Invoke-Block, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 826\r\n    в <ScriptBlock>, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 881\r\n    в <ScriptBlock>, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 1988\r\n    в <ScriptBlock>, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 1949\r\n    в Invoke-ScriptBlock, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 2113\r\n    в Invoke-Block, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 928\r\n    в <ScriptBlock>, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 881\r\n    в <ScriptBlock>, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 1988\r\n    в <ScriptBlock>, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 1949\r\n    в Invoke-ScriptBlock, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 2113\r\n    в Invoke-Block, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 928\r\n    в <ScriptBlock>, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 881\r\n    в <ScriptBlock>, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 1988\r\n    в <ScriptBlock>, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 1949\r\n    в Invoke-ScriptBlock, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 2113\r\n    в Invoke-Block, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 928\r\n    в <ScriptBlock>, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 1662\r\n    в <ScriptBlock>, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.ps1: строка 3\r\n    в <ScriptBlock>, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 3154\r\n    в Invoke-InNewScriptScope, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 3161\r\n    в Run-Test, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 1665\r\n    в Invoke-Test, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 2465\r\n    в Invoke-Pester<End>, C:\\Users\\sergei.s.betke\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1: строка 5225\r\n    в <ScriptBlock>, <Нет файла>: строка 1\r\n    Expected 0, but got 1.\r\n Describing Письмо сопроводительное к актам сверки.odt\r\n   [+] is valid (by ODFValidator) 1.97s (1.97s|5ms)\r\n Describing Письмо сопроводительное.odt\r\n   [+] is valid (by ODFValidator) 1.97s (1.96s|11ms)\r\n Describing Письмо.odt\r\n   [+] is valid (by ODFValidator) 2.1s (2.09s|7ms)\r\n Describing Положение о подразделении.odt\r\n   [+] is valid (by ODFValidator) 2.07s (2.06s|9ms)\r\n Describing Приказ.odt\r\n   [+] is valid (by ODFValidator) 1.95s (1.95s|6ms)\r\n Describing Профессиональная инструкция.odt\r\n   [+] is valid (by ODFValidator) 1.93s (1.93s|3ms)\r\n Describing Распоряжение (приказ) о введении в действие документа СМ.odt\r\n   [+] is valid (by ODFValidator) 1.98s (1.97s|5ms)\r\n Describing Распоряжение.odt\r\n   [+] is valid (by ODFValidator) 1.97s (1.97s|3ms)\r\n Describing Служебная записка.odt\r\n   [+] is valid (by ODFValidator) 1.97s (1.97s|4ms)\r\n Describing Справка.odt\r\n   [+] is valid (by ODFValidator) 1.95s (1.94s|3ms)\r\n\r\nRunning tests from 'Templates.Tests.ps1'\r\nDescribing Open Document templates\r\n Describing ОРД ФБУ Тест-С.-Петербург v2.ott\r\n   [+] is valid (by ODFValidator) 2.14s (2.13s|17ms)\r\nTests completed in 32.01s\r\nTests Passed: 13, Failed: 1, Skipped: 0 NotRun: 0\r\nПроцесс терминала \"powershell.exe -NoProfile -ExecutionPolicy Bypass -Command Invoke-Pester -Configuration ( Import-PowerShellDataFile -LiteralPath '.\\tests\\pester-config.psd1' )\" был завершен с кодом выхода 1.\r\n````\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2062/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2062/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2059",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2059/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2059/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2059/events",
      "html_url": "https://github.com/pester/Pester/issues/2059",
      "id": 975049603,
      "node_id": "MDU6SXNzdWU5NzUwNDk2MDM=",
      "number": 2059,
      "title": "Pester 5.3.0 not mocking out correctly",
      "user": {
        "login": "rsdoherty",
        "id": 3150510,
        "node_id": "MDQ6VXNlcjMxNTA1MTA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3150510?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rsdoherty",
        "html_url": "https://github.com/rsdoherty",
        "followers_url": "https://api.github.com/users/rsdoherty/followers",
        "following_url": "https://api.github.com/users/rsdoherty/following{/other_user}",
        "gists_url": "https://api.github.com/users/rsdoherty/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rsdoherty/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rsdoherty/subscriptions",
        "organizations_url": "https://api.github.com/users/rsdoherty/orgs",
        "repos_url": "https://api.github.com/users/rsdoherty/repos",
        "events_url": "https://api.github.com/users/rsdoherty/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rsdoherty/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 1,
      "created_at": "2021-08-19T21:07:46Z",
      "updated_at": "2021-08-21T17:55:24Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "<!-- Thank you for using Pester and taking the time to report this issue!\r\nOnly Pester 4.10.x and 5.x.x are supported, try updating to the latest version to see if that solves your problem. See [Installation and update guide](https://pester.dev/docs/introduction/installation).\r\n\r\n- Please update Pester and retest your code before submitting a bug report. See [Installation and update guide](https://pester.dev/docs/introduction/installation).\r\n- Search for existing issues.\r\n- Pester 5 introduced breaking changes and some features were removed or are not yet migrated. See [Breaking changes](https://github.com/pester/Pester#breaking-changes)\r\n-->\r\n\r\n## General summary of the issue\r\n\r\nI am seeing some odd behaviour across our Pester tests, which seem very similar to what is detailed in the following issue:\r\n\r\nhttps://github.com/pester/Pester/issues/1939\r\n\r\nSpecifically, this comment: https://github.com/pester/Pester/issues/1939#issuecomment-840330972\r\n\r\nI'm running Pester 5.3.0, but the behaviour is also present in 5.1.1 (the version mentioned in the above issue).\r\n\r\n## Describe your environment\r\n\r\n```\r\nPester version     : 5.3.0 C:\\Users\\ryan\\Documents\\WindowsPowerShell\\Modules\\Pester\\5.3.0\\Pester.psm1\r\nPowerShell version : 5.1.19041.1151\r\nOS version         : Microsoft Windows NT 10.0.19042.0\r\n```\r\n\r\nFor context, these tests run in Jenkins, which pulls down all of the dependent modules, imports them (outside of Pester running), and then invokes Pester, so I think this is possibly where it's going wrong with the session scope but I'm not as familiar with the internals of Pester as I would like to be.\r\n\r\nThe example below is the most basic one I can show, the function in the other module does not seem to get mocked out correctly, as I would expect `Import-Module` to just be mocked and return nothing.\r\n\r\nI've tried multiple iterations of `BeforeEach`, `BeforeAll`, and `It`, and I see these results on all. I'd also like to say it was intermittently erroring with different errors, but I cannot reproduce that now (typical). The other odd behaviour I'm seeing is that if I mock out functions that are duplicated and exist in multiple modules, like `Hyper-V\\Start-VM` using `Mock Start-VM -ModuleName Hyper-V`, (and we have one in `internal-module\\Start-VM`), the error in the tests when they are executed are \"missing parameter, `-Device`\", which indicates somehow it is lazy-loading the `internal-module` from the modules folder, which is confusing, as I believe it should be calling my mocked out version, but doesn't appear to be.\r\n\r\n## Steps to reproduce\r\n\r\nClone the following repository:\r\n\r\nhttps://github.com/rsdoherty/bug-demo\r\n\r\nRun Pester:\r\n\r\n```\r\nC:\\GithubData\\bug-demo [master ≡] PS>Import-Module .\\system-info\\system-info.psd1 -Force; Invoke-Pester -Output Detailed\r\nPester v5.3.0\r\n\r\nStarting discovery in 1 files.\r\nDiscovery found 2 tests in 16ms.\r\nRunning tests.\r\n\r\nRunning tests from 'Pester-Bug.Tests.ps1'\r\nDescribing Pester5Bug\r\n  [-] Does not mock out Import-Module correctly - BeforeEach 7ms (5ms|2ms)\r\n   at Get-ServerRole, C:\\GithubData\\bug-demo\\system-info\\Public\\Get-ServerRole.ps1:3\r\n   at Get-Bug, C:\\GithubData\\bug-demo\\Pester5Bug\\Public\\Get-Bug.ps1:3\r\n   at <ScriptBlock>, C:\\GithubData\\bug-demo\\Pester5Bug\\Tests\\Pester-Bug.Tests.ps1:14\r\n   FileNotFoundException: The specified module 'does-not-exist' was not loaded because no valid module file was found in any module directory.\r\n  [-] Does not mock out Import-Module correctly - It 7ms (5ms|1ms)\r\n   at Get-ServerRole, C:\\GithubData\\bug-demo\\system-info\\Public\\Get-ServerRole.ps1:3\r\n   at Get-Bug, C:\\GithubData\\bug-demo\\Pester5Bug\\Public\\Get-Bug.ps1:3\r\n   at <ScriptBlock>, C:\\GithubData\\bug-demo\\Pester5Bug\\Tests\\Pester-Bug.Tests.ps1:19\r\n   FileNotFoundException: The specified module 'does-not-exist' was not loaded because no valid module file was found in any module directory.\r\nTests completed in 78ms\r\nTests Passed: 0, Failed: 2, Skipped: 0 NotRun: 0\r\n```\r\n\r\nAlso shown in Pester 5.1.1:\r\n\r\n```\r\nC:\\GithubData\\bug-demo [master ≡] PS>Import-Module .\\system-info\\system-info.psd1 -Force; Invoke-Pester -Output Detailed\r\n\r\nStarting discovery in 1 files.\r\nDiscovering in Pester-Bug.Tests.ps1.\r\nFound 2 tests. 12ms\r\nDiscovery finished in 18ms.\r\n\r\nRunning tests from 'Pester-Bug.Tests.ps1'\r\nDescribing Pester5Bug\r\n  [-] Does not mock out Import-Module correctly - BeforeEach 7ms (5ms|2ms)\r\n   at Get-ServerRole, C:\\GithubData\\bug-demo\\system-info\\Public\\Get-ServerRole.ps1:3\r\n   at Get-Bug, C:\\GithubData\\bug-demo\\Pester5Bug\\Public\\Get-Bug.ps1:3\r\n   at <ScriptBlock>, C:\\GithubData\\bug-demo\\Pester5Bug\\Tests\\Pester-Bug.Tests.ps1:14\r\n   FileNotFoundException: The specified module 'does-not-exist' was not loaded because no valid module file was found in any module directory.\r\n  [-] Does not mock out Import-Module correctly - It 6ms (5ms|1ms)\r\n   at Get-ServerRole, C:\\GithubData\\bug-demo\\system-info\\Public\\Get-ServerRole.ps1:3\r\n   at Get-Bug, C:\\GithubData\\bug-demo\\Pester5Bug\\Public\\Get-Bug.ps1:3\r\n   at <ScriptBlock>, C:\\GithubData\\bug-demo\\Pester5Bug\\Tests\\Pester-Bug.Tests.ps1:19\r\n   FileNotFoundException: The specified module 'does-not-exist' was not loaded because no valid module file was found in any module directory.\r\nTests completed in 109ms\r\nTests Passed: 0, Failed: 2, Skipped: 0 NotRun: 0\r\n```\r\n\r\n## Expected Behavior\r\n\r\n`Import-Module` gets mocked out correctly\r\n\r\n## Current Behavior\r\n\r\n`Import-Module` errors for no module found\r\n\r\n## Possible Solution? (optional)",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2059/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2059/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2049",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2049/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2049/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2049/events",
      "html_url": "https://github.com/pester/Pester/issues/2049",
      "id": 970873207,
      "node_id": "MDU6SXNzdWU5NzA4NzMyMDc=",
      "number": 2049,
      "title": "Feature: Add a -Reason parameter when using the -Skip switch ",
      "user": {
        "login": "AlonGvili",
        "id": 34351424,
        "node_id": "MDQ6VXNlcjM0MzUxNDI0",
        "avatar_url": "https://avatars.githubusercontent.com/u/34351424?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/AlonGvili",
        "html_url": "https://github.com/AlonGvili",
        "followers_url": "https://api.github.com/users/AlonGvili/followers",
        "following_url": "https://api.github.com/users/AlonGvili/following{/other_user}",
        "gists_url": "https://api.github.com/users/AlonGvili/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/AlonGvili/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/AlonGvili/subscriptions",
        "organizations_url": "https://api.github.com/users/AlonGvili/orgs",
        "repos_url": "https://api.github.com/users/AlonGvili/repos",
        "events_url": "https://api.github.com/users/AlonGvili/events{/privacy}",
        "received_events_url": "https://api.github.com/users/AlonGvili/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [
        {
          "id": 201863597,
          "node_id": "MDU6TGFiZWwyMDE4NjM1OTc=",
          "url": "https://api.github.com/repos/pester/Pester/labels/Feature",
          "name": "Feature",
          "color": "207de5",
          "default": false,
          "description": null
        }
      ],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": null,
      "comments": 0,
      "created_at": "2021-08-14T09:31:36Z",
      "updated_at": "2021-08-14T09:31:36Z",
      "closed_at": null,
      "author_association": "NONE",
      "active_lock_reason": null,
      "body": "<!-- Thank you for using Pester!\r\nGood ideas are always welcome and there's no commitment to implement them yourself, but feel free to contribute after an initial discussion.\r\n\r\n- Try out the latest version of Pester - maybe your request is already available. See [Installation and update guide](https://pester.dev/docs/introduction/installation).\r\n- See [README](https://github.com/pester/Pester) for the latest updates and newest features.\r\n- Search for existing issues to match your idea. A popular issue/request is more likely to be prioritized.\r\n-->\r\n\r\n## Summary of the feature request\r\n<!-- A clear and concise description of your idea. What problem do you want to solve?\r\nAs a user, I'd like to be able to get X by doing Y. This would be very useful in situations like Z. -->\r\nHey, I wonder if you can add What is the reason a test was skipped\r\n\r\nthe current return object you will get if you using ```-PassThru``` doesn't contain any info on this\r\nmaybe you can  add parameter name ```-Reason``` 'the reason it skipped'\r\n\r\n\r\n```powershell\r\nPS D:\\Github\\pwshchakraui> $results.Skipped[0]             \r\n\r\n\r\nName              : Has help comment block\r\nPath              : {New-Tab, Comment Base Help, Has help comment block}\r\nData              :\r\nExpandedName      : Has help comment block\r\nExpandedPath      : New-Tab.Comment Base Help.Has help comment block\r\nResult            : Skipped\r\nErrorRecord       : {}\r\nStandardOutput    :\r\nDuration          : 00:00:00.0054751\r\nItemType          : Test\r\nId                :\r\nScriptBlock       :\r\n                                    $FilePath | Should -FileContentMatch \"<#\"\r\n                                    $FilePath | Should -FileContentMatch \"#>\"\r\n\r\nTag               :\r\nFocus             : False\r\nSkip              : True\r\nBlock             : [!] Comment Base Help\r\nFirst             : True\r\nLast              : False\r\nInclude           : False\r\nExclude           : False\r\nExplicit          : False\r\nShouldRun         : True\r\nStartLine         : 9\r\nExecuted          : True\r\nExecutedAt        : 8/14/2021 11:43:21 AM\r\nPassed            : True\r\nSkipped           : True\r\nUserDuration      : 00:00:00\r\nFrameworkDuration : 00:00:00.0054751\r\nPluginData        :\r\nFrameworkData     :\r\n```  \r\n\r\n## How should it work? (optional)\r\n<!-- Do you already have an idea of how this experience should be?\r\nFeel free to provide a short demo of usage and expected results. -->\r\n\r\n```powershell\r\n\r\nDescribe \"describe1\" {\r\n    Context \"with one skipped test\" {\r\n        It \"test 1\" -Skip -Reason 'i want it to skip' {\r\n            1 | Should -Be 2\r\n        }\r\n\r\n        It \"test 2\" {\r\n            1 | Should -Be 1\r\n        }\r\n    }\r\n\r\n    Describe \"that is skipped\" -Skip -Reason 'i want it to skip all the tests' {\r\n        It \"test 3\" {\r\n            1 | Should -Be 2\r\n        }\r\n    }\r\n\r\n    Context \"that is skipped and has skipped test\" -Skip -Reason 'i want all the It tests to skip' {\r\n        It \"test 3\" -Skip {\r\n            1 | Should -Be 2\r\n        }\r\n\r\n        It \"test 3\" {\r\n            1 | Should -Be 2\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nSo the return object will look something like this.\r\n```powershell\r\nName              : Has help comment block\r\nPath              : {New-Tab, Comment Base Help, Has help comment block}\r\nData              :\r\nExpandedName      : Has help comment block\r\nExpandedPath      : New-Tab.Comment Base Help.Has help comment block\r\nResult            : Skipped\r\nErrorRecord       : {}\r\nStandardOutput    :\r\nDuration          : 00:00:00.0054751\r\nItemType          : Test\r\nId                :\r\nScriptBlock       :\r\n                                    $FilePath | Should -FileContentMatch \"<#\"\r\n                                    $FilePath | Should -FileContentMatch \"#>\"\r\n\r\nTag               :\r\nFocus             : False\r\nSkip              : True\r\nBlock             : [!] Comment Base Help\r\nFirst             : True\r\nLast              : False\r\nInclude           : False\r\nExclude           : False\r\nExplicit          : False\r\nShouldRun         : True\r\nStartLine         : 9\r\nExecuted          : True\r\nExecutedAt        : 8/14/2021 11:43:21 AM\r\nPassed            : True\r\nSkipped           : True\r\n```\r\n```powershell\r\nSkippedReason  : I want it to skip\r\n```\r\n```powershell\r\nUserDuration      : 00:00:00\r\nFrameworkDuration : 00:00:00.0054751\r\nPluginData        :\r\nFrameworkData     :\r\n```  ",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2049/reactions",
        "total_count": 0,
        "+1": 0,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2049/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    },
    {
      "url": "https://api.github.com/repos/pester/Pester/issues/2044",
      "repository_url": "https://api.github.com/repos/pester/Pester",
      "labels_url": "https://api.github.com/repos/pester/Pester/issues/2044/labels{/name}",
      "comments_url": "https://api.github.com/repos/pester/Pester/issues/2044/comments",
      "events_url": "https://api.github.com/repos/pester/Pester/issues/2044/events",
      "html_url": "https://github.com/pester/Pester/issues/2044",
      "id": 962802826,
      "node_id": "MDU6SXNzdWU5NjI4MDI4MjY=",
      "number": 2044,
      "title": "Code injection in fixture name handling if the name contains backticks",
      "user": {
        "login": "vexx32",
        "id": 32407840,
        "node_id": "MDQ6VXNlcjMyNDA3ODQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/32407840?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vexx32",
        "html_url": "https://github.com/vexx32",
        "followers_url": "https://api.github.com/users/vexx32/followers",
        "following_url": "https://api.github.com/users/vexx32/following{/other_user}",
        "gists_url": "https://api.github.com/users/vexx32/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/vexx32/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/vexx32/subscriptions",
        "organizations_url": "https://api.github.com/users/vexx32/orgs",
        "repos_url": "https://api.github.com/users/vexx32/repos",
        "events_url": "https://api.github.com/users/vexx32/events{/privacy}",
        "received_events_url": "https://api.github.com/users/vexx32/received_events",
        "type": "User",
        "site_admin": false
      },
      "labels": [],
      "state": "open",
      "locked": false,
      "assignee": null,
      "assignees": [],
      "milestone": {
        "url": "https://api.github.com/repos/pester/Pester/milestones/27",
        "html_url": "https://github.com/pester/Pester/milestone/27",
        "labels_url": "https://api.github.com/repos/pester/Pester/milestones/27/labels",
        "id": 6855357,
        "node_id": "MDk6TWlsZXN0b25lNjg1NTM1Nw==",
        "number": 27,
        "title": "5.4",
        "description": null,
        "creator": {
          "login": "nohwnd",
          "id": 5735905,
          "node_id": "MDQ6VXNlcjU3MzU5MDU=",
          "avatar_url": "https://avatars.githubusercontent.com/u/5735905?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/nohwnd",
          "html_url": "https://github.com/nohwnd",
          "followers_url": "https://api.github.com/users/nohwnd/followers",
          "following_url": "https://api.github.com/users/nohwnd/following{/other_user}",
          "gists_url": "https://api.github.com/users/nohwnd/gists{/gist_id}",
          "starred_url": "https://api.github.com/users/nohwnd/starred{/owner}{/repo}",
          "subscriptions_url": "https://api.github.com/users/nohwnd/subscriptions",
          "organizations_url": "https://api.github.com/users/nohwnd/orgs",
          "repos_url": "https://api.github.com/users/nohwnd/repos",
          "events_url": "https://api.github.com/users/nohwnd/events{/privacy}",
          "received_events_url": "https://api.github.com/users/nohwnd/received_events",
          "type": "User",
          "site_admin": false
        },
        "open_issues": 9,
        "closed_issues": 0,
        "state": "open",
        "created_at": "2021-06-15T08:16:42Z",
        "updated_at": "2021-11-22T06:27:09Z",
        "due_on": null,
        "closed_at": null
      },
      "comments": 7,
      "created_at": "2021-08-06T14:44:52Z",
      "updated_at": "2021-08-10T16:26:06Z",
      "closed_at": null,
      "author_association": "CONTRIBUTOR",
      "active_lock_reason": null,
      "body": "## General summary of the issue\r\n\r\nPowerShell's normal parsing of a test ignores `` ` `` characters in single-quoted strings. Pester seems to re-parse certain parts, which turns them into double-quoted strings, without properly escaping some characters like this.\r\n\r\n## Describe your environment\r\n\r\n```\r\nPester version     : 5.2.0 /Users/joelfrancis/.local/share/powershell/Modules/Pester/5.2.0/Pester.psm1                  PowerShell version : 7.1.0-rc.2                                                                                         OS version         : Unix 11.0.0\r\n```\r\n\r\n\r\n## Steps to reproduce\r\n\r\nSimple reproducible test file:\r\n\r\n```powershell\r\nDescribe 'test' {\r\n    It 'doesn''t break with `backticks `' { \r\n        # this can be empty and it still breaks\r\n    }\r\n}\r\n```\r\n\r\n## Expected Behavior\r\n\r\nThe content of the parsed string should probably(?) not be fully re-parsed with PowerShell's parser, this could lead to all sorts of odd behaviour, require double escaping, accidental code injection, etc.\r\n\r\nFrom testing it seems like _some_ additional escaping is done, but it's not careful enough by the looks of it, backticks are currently not escaped unlike some other characters.\r\n\r\n## Current Behavior\r\n\r\n```\r\n\r\nStarting discovery in 1 files.\r\nDiscovery finished in 110ms.\r\nRunning tests.\r\n[-] test.doesn't break with `backticks` 39ms (22ms|17ms)\r\n ParseException: At line:1 char:1\r\n + \"doesn't break with `backticks`\"\r\n + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n The string is missing the terminator: \".\r\n MethodInvocationException: Exception calling \"Create\" with \"1\" argument(s): \"At line:1 char:1\r\n + \"doesn't break with `backticks`\"\r\n + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n The string is missing the terminator: \".\"\r\n```\r\n\r\n## Possible Solution? (optional)\r\n\r\nPester is probably doing something with the parser to expand its `<TestCase>` insertions. There are some alternatives to fully re-parsing a string, for example:\r\n\r\n- Prefix a `$` to the value inside `<...>` and then use `$ExecutionContext.InvokeCommand.ExpandString($str)` to expand the value just for that segment of the string, rather than the whole string.\r\n- Opt for a regex replacement instead of invoking PowerShell's parser directly.\r\n\r\nIn my opinion, I think _fully_ re-parsing the string is hazardous at best and fragile in ways that aren't easily avoidable. Manually escaping things is a start, but as this issue shows, it's easy to miss edge cases. It's possible to bypass Pester's escaping currently by adding extra backticks, which may lead to code injection.\r\n\r\nFor example:\r\n```powershell\r\nDescribe 'test' {\r\n    It 'allows `$(Gci) with backticks' {\r\n        throw 'this test name should not actually call `gci` but it does.'\r\n    }\r\n}\r\n```\r\n",
      "reactions": {
        "url": "https://api.github.com/repos/pester/Pester/issues/2044/reactions",
        "total_count": 2,
        "+1": 2,
        "-1": 0,
        "laugh": 0,
        "hooray": 0,
        "confused": 0,
        "heart": 0,
        "rocket": 0,
        "eyes": 0
      },
      "timeline_url": "https://api.github.com/repos/pester/Pester/issues/2044/timeline",
      "performed_via_github_app": null,
      "score": 1.0
    }
  ]
}
